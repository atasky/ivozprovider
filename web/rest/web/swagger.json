{
    "swagger": "2.0",
    "basePath": "\/",
    "info": {
        "title": "",
        "version": "0.1.0"
    },
    "paths": {
        "\/administrators": {
            "get": {
                "tags": [
                    "Administrator"
                ],
                "operationId": "getAdministratorCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Administrator resources.",
                "responses": {
                    "200": {
                        "description": "Administrator collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Administrator-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Administrator"
                ],
                "operationId": "postAdministratorCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Administrator resource.",
                "parameters": [
                    {
                        "name": "administrator",
                        "in": "body",
                        "description": "The new Administrator resource",
                        "schema": {
                            "$ref": "#\/definitions\/Administrator"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/administrators\/{id}": {
            "get": {
                "tags": [
                    "Administrator"
                ],
                "operationId": "getAdministratorItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Administrator-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Administrator"
                ],
                "operationId": "putAdministratorItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "administrator",
                        "in": "body",
                        "description": "The updated Administrator resource",
                        "schema": {
                            "$ref": "#\/definitions\/Administrator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Administrator"
                ],
                "operationId": "deleteAdministratorItem",
                "summary": "Removes the Administrator resource.",
                "responses": {
                    "204": {
                        "description": "Administrator resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/application_servers": {
            "get": {
                "tags": [
                    "ApplicationServer"
                ],
                "operationId": "getApplicationServerCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ApplicationServer resources.",
                "responses": {
                    "200": {
                        "description": "ApplicationServer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ApplicationServer-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationServer"
                ],
                "operationId": "postApplicationServerCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ApplicationServer resource.",
                "parameters": [
                    {
                        "name": "applicationServer",
                        "in": "body",
                        "description": "The new ApplicationServer resource",
                        "schema": {
                            "$ref": "#\/definitions\/ApplicationServer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ApplicationServer resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ApplicationServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/application_servers\/{id}": {
            "get": {
                "tags": [
                    "ApplicationServer"
                ],
                "operationId": "getApplicationServerItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ApplicationServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ApplicationServer resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ApplicationServer-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ApplicationServer"
                ],
                "operationId": "putApplicationServerItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ApplicationServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "applicationServer",
                        "in": "body",
                        "description": "The updated ApplicationServer resource",
                        "schema": {
                            "$ref": "#\/definitions\/ApplicationServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ApplicationServer resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ApplicationServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApplicationServer"
                ],
                "operationId": "deleteApplicationServerItem",
                "summary": "Removes the ApplicationServer resource.",
                "responses": {
                    "204": {
                        "description": "ApplicationServer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/brand_services": {
            "get": {
                "tags": [
                    "BrandService"
                ],
                "operationId": "getBrandServiceCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of BrandService resources.",
                "responses": {
                    "200": {
                        "description": "BrandService collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/BrandService-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "BrandService"
                ],
                "operationId": "postBrandServiceCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a BrandService resource.",
                "parameters": [
                    {
                        "name": "brandService",
                        "in": "body",
                        "description": "The new BrandService resource",
                        "schema": {
                            "$ref": "#\/definitions\/BrandService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BrandService resource created",
                        "schema": {
                            "$ref": "#\/definitions\/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/brand_services\/{id}": {
            "get": {
                "tags": [
                    "BrandService"
                ],
                "operationId": "getBrandServiceItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource response",
                        "schema": {
                            "$ref": "#\/definitions\/BrandService-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "BrandService"
                ],
                "operationId": "putBrandServiceItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandService",
                        "in": "body",
                        "description": "The updated BrandService resource",
                        "schema": {
                            "$ref": "#\/definitions\/BrandService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandService"
                ],
                "operationId": "deleteBrandServiceItem",
                "summary": "Removes the BrandService resource.",
                "responses": {
                    "204": {
                        "description": "BrandService resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/brand_urls": {
            "get": {
                "tags": [
                    "BrandUrl"
                ],
                "operationId": "getBrandUrlCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of BrandUrl resources.",
                "responses": {
                    "200": {
                        "description": "BrandUrl collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/BrandUrl-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "BrandUrl"
                ],
                "operationId": "postBrandUrlCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a BrandUrl resource.",
                "parameters": [
                    {
                        "name": "brandUrl",
                        "in": "body",
                        "description": "The new BrandUrl resource",
                        "schema": {
                            "$ref": "#\/definitions\/BrandUrl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BrandUrl resource created",
                        "schema": {
                            "$ref": "#\/definitions\/BrandUrl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/brand_urls\/{id}": {
            "get": {
                "tags": [
                    "BrandUrl"
                ],
                "operationId": "getBrandUrlItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a BrandUrl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandUrl resource response",
                        "schema": {
                            "$ref": "#\/definitions\/BrandUrl-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "BrandUrl"
                ],
                "operationId": "putBrandUrlItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the BrandUrl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandUrl",
                        "in": "body",
                        "description": "The updated BrandUrl resource",
                        "schema": {
                            "$ref": "#\/definitions\/BrandUrl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandUrl resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/BrandUrl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandUrl"
                ],
                "operationId": "deleteBrandUrlItem",
                "summary": "Removes the BrandUrl resource.",
                "responses": {
                    "204": {
                        "description": "BrandUrl resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Brand resources.",
                "responses": {
                    "200": {
                        "description": "Brand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Brand-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "operationId": "postBrandCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Brand resource.",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "The new Brand resource",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Brand resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/brands\/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Brand-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "operationId": "putBrandItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "The updated Brand resource",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "operationId": "deleteBrandItem",
                "summary": "Removes the Brand resource.",
                "responses": {
                    "204": {
                        "description": "Brand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/calendars": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "operationId": "getCalendarCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Calendar resources.",
                "responses": {
                    "200": {
                        "description": "Calendar collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Calendar-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Calendar"
                ],
                "operationId": "postCalendarCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Calendar resource.",
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "body",
                        "description": "The new Calendar resource",
                        "schema": {
                            "$ref": "#\/definitions\/Calendar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Calendar resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Calendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/calendars\/{id}": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "operationId": "getCalendarItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Calendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Calendar-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Calendar"
                ],
                "operationId": "putCalendarItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Calendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "calendar",
                        "in": "body",
                        "description": "The updated Calendar resource",
                        "schema": {
                            "$ref": "#\/definitions\/Calendar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Calendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Calendar"
                ],
                "operationId": "deleteCalendarItem",
                "summary": "Removes the Calendar resource.",
                "responses": {
                    "204": {
                        "description": "Calendar resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/call_acl_rel_match_lists": {
            "get": {
                "tags": [
                    "CallAclRelMatchList"
                ],
                "operationId": "getCallAclRelMatchListCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of CallAclRelMatchList resources.",
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/CallAclRelMatchList-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CallAclRelMatchList"
                ],
                "operationId": "postCallAclRelMatchListCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a CallAclRelMatchList resource.",
                "parameters": [
                    {
                        "name": "callAclRelMatchList",
                        "in": "body",
                        "description": "The new CallAclRelMatchList resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallAclRelMatchList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CallAclRelMatchList resource created",
                        "schema": {
                            "$ref": "#\/definitions\/CallAclRelMatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/call_acl_rel_match_lists\/{id}": {
            "get": {
                "tags": [
                    "CallAclRelMatchList"
                ],
                "operationId": "getCallAclRelMatchListItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a CallAclRelMatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList resource response",
                        "schema": {
                            "$ref": "#\/definitions\/CallAclRelMatchList-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CallAclRelMatchList"
                ],
                "operationId": "putCallAclRelMatchListItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the CallAclRelMatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "callAclRelMatchList",
                        "in": "body",
                        "description": "The updated CallAclRelMatchList resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallAclRelMatchList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/CallAclRelMatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CallAclRelMatchList"
                ],
                "operationId": "deleteCallAclRelMatchListItem",
                "summary": "Removes the CallAclRelMatchList resource.",
                "responses": {
                    "204": {
                        "description": "CallAclRelMatchList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/call_acls": {
            "get": {
                "tags": [
                    "CallAcl"
                ],
                "operationId": "getCallAclCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of CallAcl resources.",
                "responses": {
                    "200": {
                        "description": "CallAcl collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/CallAcl-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CallAcl"
                ],
                "operationId": "postCallAclCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a CallAcl resource.",
                "parameters": [
                    {
                        "name": "callAcl",
                        "in": "body",
                        "description": "The new CallAcl resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallAcl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CallAcl resource created",
                        "schema": {
                            "$ref": "#\/definitions\/CallAcl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/call_acls\/{id}": {
            "get": {
                "tags": [
                    "CallAcl"
                ],
                "operationId": "getCallAclItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a CallAcl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAcl resource response",
                        "schema": {
                            "$ref": "#\/definitions\/CallAcl-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CallAcl"
                ],
                "operationId": "putCallAclItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the CallAcl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "callAcl",
                        "in": "body",
                        "description": "The updated CallAcl resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallAcl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAcl resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/CallAcl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CallAcl"
                ],
                "operationId": "deleteCallAclItem",
                "summary": "Removes the CallAcl resource.",
                "responses": {
                    "204": {
                        "description": "CallAcl resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/call_forward_settings": {
            "get": {
                "tags": [
                    "CallForwardSetting"
                ],
                "operationId": "getCallForwardSettingCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of CallForwardSetting resources.",
                "responses": {
                    "200": {
                        "description": "CallForwardSetting collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/CallForwardSetting-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CallForwardSetting"
                ],
                "operationId": "postCallForwardSettingCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a CallForwardSetting resource.",
                "parameters": [
                    {
                        "name": "callForwardSetting",
                        "in": "body",
                        "description": "The new CallForwardSetting resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallForwardSetting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CallForwardSetting resource created",
                        "schema": {
                            "$ref": "#\/definitions\/CallForwardSetting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/call_forward_settings\/{id}": {
            "get": {
                "tags": [
                    "CallForwardSetting"
                ],
                "operationId": "getCallForwardSettingItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a CallForwardSetting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallForwardSetting resource response",
                        "schema": {
                            "$ref": "#\/definitions\/CallForwardSetting-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CallForwardSetting"
                ],
                "operationId": "putCallForwardSettingItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the CallForwardSetting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "callForwardSetting",
                        "in": "body",
                        "description": "The updated CallForwardSetting resource",
                        "schema": {
                            "$ref": "#\/definitions\/CallForwardSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallForwardSetting resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/CallForwardSetting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CallForwardSetting"
                ],
                "operationId": "deleteCallForwardSettingItem",
                "summary": "Removes the CallForwardSetting resource.",
                "responses": {
                    "204": {
                        "description": "CallForwardSetting resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "operationId": "getCompanyCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Company resources.",
                "responses": {
                    "200": {
                        "description": "Company collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Company-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "operationId": "postCompanyCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Company resource.",
                "parameters": [
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The new Company resource",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/companies\/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "operationId": "getCompanyItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Company-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "operationId": "putCompanyItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The updated Company resource",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "operationId": "deleteCompanyItem",
                "summary": "Removes the Company resource.",
                "responses": {
                    "204": {
                        "description": "Company resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/company_services": {
            "get": {
                "tags": [
                    "CompanyService"
                ],
                "operationId": "getCompanyServiceCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of CompanyService resources.",
                "responses": {
                    "200": {
                        "description": "CompanyService collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/CompanyService-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CompanyService"
                ],
                "operationId": "postCompanyServiceCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a CompanyService resource.",
                "parameters": [
                    {
                        "name": "companyService",
                        "in": "body",
                        "description": "The new CompanyService resource",
                        "schema": {
                            "$ref": "#\/definitions\/CompanyService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CompanyService resource created",
                        "schema": {
                            "$ref": "#\/definitions\/CompanyService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/company_services\/{id}": {
            "get": {
                "tags": [
                    "CompanyService"
                ],
                "operationId": "getCompanyServiceItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a CompanyService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyService resource response",
                        "schema": {
                            "$ref": "#\/definitions\/CompanyService-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CompanyService"
                ],
                "operationId": "putCompanyServiceItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the CompanyService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "companyService",
                        "in": "body",
                        "description": "The updated CompanyService resource",
                        "schema": {
                            "$ref": "#\/definitions\/CompanyService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyService resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/CompanyService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CompanyService"
                ],
                "operationId": "deleteCompanyServiceItem",
                "summary": "Removes the CompanyService resource.",
                "responses": {
                    "204": {
                        "description": "CompanyService resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/conditional_routes": {
            "get": {
                "tags": [
                    "ConditionalRoute"
                ],
                "operationId": "getConditionalRouteCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ConditionalRoute resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoute collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ConditionalRoute-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConditionalRoute"
                ],
                "operationId": "postConditionalRouteCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ConditionalRoute resource.",
                "parameters": [
                    {
                        "name": "conditionalRoute",
                        "in": "body",
                        "description": "The new ConditionalRoute resource",
                        "schema": {
                            "$ref": "#\/definitions\/ConditionalRoute"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ConditionalRoute resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ConditionalRoute"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/conditional_routes\/{id}": {
            "get": {
                "tags": [
                    "ConditionalRoute"
                ],
                "operationId": "getConditionalRouteItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ConditionalRoute resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoute resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ConditionalRoute-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ConditionalRoute"
                ],
                "operationId": "putConditionalRouteItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ConditionalRoute resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "conditionalRoute",
                        "in": "body",
                        "description": "The updated ConditionalRoute resource",
                        "schema": {
                            "$ref": "#\/definitions\/ConditionalRoute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoute resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ConditionalRoute"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ConditionalRoute"
                ],
                "operationId": "deleteConditionalRouteItem",
                "summary": "Removes the ConditionalRoute resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoute resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/conference_rooms": {
            "get": {
                "tags": [
                    "ConferenceRoom"
                ],
                "operationId": "getConferenceRoomCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ConferenceRoom resources.",
                "responses": {
                    "200": {
                        "description": "ConferenceRoom collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ConferenceRoom-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConferenceRoom"
                ],
                "operationId": "postConferenceRoomCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ConferenceRoom resource.",
                "parameters": [
                    {
                        "name": "conferenceRoom",
                        "in": "body",
                        "description": "The new ConferenceRoom resource",
                        "schema": {
                            "$ref": "#\/definitions\/ConferenceRoom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ConferenceRoom resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ConferenceRoom"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/conference_rooms\/{id}": {
            "get": {
                "tags": [
                    "ConferenceRoom"
                ],
                "operationId": "getConferenceRoomItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ConferenceRoom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConferenceRoom resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ConferenceRoom-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ConferenceRoom"
                ],
                "operationId": "putConferenceRoomItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ConferenceRoom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "conferenceRoom",
                        "in": "body",
                        "description": "The updated ConferenceRoom resource",
                        "schema": {
                            "$ref": "#\/definitions\/ConferenceRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConferenceRoom resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ConferenceRoom"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ConferenceRoom"
                ],
                "operationId": "deleteConferenceRoomItem",
                "summary": "Removes the ConferenceRoom resource.",
                "responses": {
                    "204": {
                        "description": "ConferenceRoom resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "operationId": "getCountryCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Country resources.",
                "responses": {
                    "200": {
                        "description": "Country collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Country-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "operationId": "postCountryCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Country resource.",
                "parameters": [
                    {
                        "name": "country",
                        "in": "body",
                        "description": "The new Country resource",
                        "schema": {
                            "$ref": "#\/definitions\/Country"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Country resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Country"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/countries\/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "operationId": "getCountryItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Country resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Country-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "operationId": "putCountryItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Country resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "country",
                        "in": "body",
                        "description": "The updated Country resource",
                        "schema": {
                            "$ref": "#\/definitions\/Country"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Country"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "operationId": "deleteCountryItem",
                "summary": "Removes the Country resource.",
                "responses": {
                    "204": {
                        "description": "Country resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/ddis": {
            "get": {
                "tags": [
                    "Ddi"
                ],
                "operationId": "getDdiCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Ddi resources.",
                "responses": {
                    "200": {
                        "description": "Ddi collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Ddi-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ddi"
                ],
                "operationId": "postDdiCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Ddi resource.",
                "parameters": [
                    {
                        "name": "ddi",
                        "in": "body",
                        "description": "The new Ddi resource",
                        "schema": {
                            "$ref": "#\/definitions\/Ddi"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ddi resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Ddi"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/ddis\/{id}": {
            "get": {
                "tags": [
                    "Ddi"
                ],
                "operationId": "getDdiItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Ddi-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ddi"
                ],
                "operationId": "putDdiItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "ddi",
                        "in": "body",
                        "description": "The updated Ddi resource",
                        "schema": {
                            "$ref": "#\/definitions\/Ddi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Ddi"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ddi"
                ],
                "operationId": "deleteDdiItem",
                "summary": "Removes the Ddi resource.",
                "responses": {
                    "204": {
                        "description": "Ddi resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/domains": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "operationId": "getDomainCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Domain resources.",
                "responses": {
                    "200": {
                        "description": "Domain collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Domain-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Domain"
                ],
                "operationId": "postDomainCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Domain resource.",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "body",
                        "description": "The new Domain resource",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Domain resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/domains\/{id}": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "operationId": "getDomainItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Domain resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Domain-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Domain"
                ],
                "operationId": "putDomainItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Domain resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "domain",
                        "in": "body",
                        "description": "The updated Domain resource",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Domain"
                ],
                "operationId": "deleteDomainItem",
                "summary": "Removes the Domain resource.",
                "responses": {
                    "204": {
                        "description": "Domain resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/extensions": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "operationId": "getExtensionCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Extension resources.",
                "responses": {
                    "200": {
                        "description": "Extension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Extension-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Extension"
                ],
                "operationId": "postExtensionCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Extension resource.",
                "parameters": [
                    {
                        "name": "extension",
                        "in": "body",
                        "description": "The new Extension resource",
                        "schema": {
                            "$ref": "#\/definitions\/Extension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Extension resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Extension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/extensions\/{id}": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "operationId": "getExtensionItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Extension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extension resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Extension-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Extension"
                ],
                "operationId": "putExtensionItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Extension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "extension",
                        "in": "body",
                        "description": "The updated Extension resource",
                        "schema": {
                            "$ref": "#\/definitions\/Extension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extension resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Extension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Extension"
                ],
                "operationId": "deleteExtensionItem",
                "summary": "Removes the Extension resource.",
                "responses": {
                    "204": {
                        "description": "Extension resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/external_call_filter_black_lists": {
            "get": {
                "tags": [
                    "ExternalCallFilterBlackList"
                ],
                "operationId": "getExternalCallFilterBlackListCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ExternalCallFilterBlackList resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ExternalCallFilterBlackList-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExternalCallFilterBlackList"
                ],
                "operationId": "postExternalCallFilterBlackListCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ExternalCallFilterBlackList resource.",
                "parameters": [
                    {
                        "name": "externalCallFilterBlackList",
                        "in": "body",
                        "description": "The new ExternalCallFilterBlackList resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterBlackList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterBlackList resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterBlackList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/external_call_filter_black_lists\/{id}": {
            "get": {
                "tags": [
                    "ExternalCallFilterBlackList"
                ],
                "operationId": "getExternalCallFilterBlackListItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ExternalCallFilterBlackList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterBlackList-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalCallFilterBlackList"
                ],
                "operationId": "putExternalCallFilterBlackListItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ExternalCallFilterBlackList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "externalCallFilterBlackList",
                        "in": "body",
                        "description": "The updated ExternalCallFilterBlackList resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterBlackList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterBlackList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalCallFilterBlackList"
                ],
                "operationId": "deleteExternalCallFilterBlackListItem",
                "summary": "Removes the ExternalCallFilterBlackList resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterBlackList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/external_call_filter_rel_calendars": {
            "get": {
                "tags": [
                    "ExternalCallFilterRelCalendar"
                ],
                "operationId": "getExternalCallFilterRelCalendarCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ExternalCallFilterRelCalendar resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ExternalCallFilterRelCalendar-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExternalCallFilterRelCalendar"
                ],
                "operationId": "postExternalCallFilterRelCalendarCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ExternalCallFilterRelCalendar resource.",
                "parameters": [
                    {
                        "name": "externalCallFilterRelCalendar",
                        "in": "body",
                        "description": "The new ExternalCallFilterRelCalendar resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelCalendar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterRelCalendar resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/external_call_filter_rel_calendars\/{id}": {
            "get": {
                "tags": [
                    "ExternalCallFilterRelCalendar"
                ],
                "operationId": "getExternalCallFilterRelCalendarItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ExternalCallFilterRelCalendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelCalendar-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalCallFilterRelCalendar"
                ],
                "operationId": "putExternalCallFilterRelCalendarItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ExternalCallFilterRelCalendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "externalCallFilterRelCalendar",
                        "in": "body",
                        "description": "The updated ExternalCallFilterRelCalendar resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelCalendar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalCallFilterRelCalendar"
                ],
                "operationId": "deleteExternalCallFilterRelCalendarItem",
                "summary": "Removes the ExternalCallFilterRelCalendar resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterRelCalendar resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/external_call_filter_rel_schedules": {
            "get": {
                "tags": [
                    "ExternalCallFilterRelSchedule"
                ],
                "operationId": "getExternalCallFilterRelScheduleCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ExternalCallFilterRelSchedule resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ExternalCallFilterRelSchedule-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExternalCallFilterRelSchedule"
                ],
                "operationId": "postExternalCallFilterRelScheduleCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ExternalCallFilterRelSchedule resource.",
                "parameters": [
                    {
                        "name": "externalCallFilterRelSchedule",
                        "in": "body",
                        "description": "The new ExternalCallFilterRelSchedule resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelSchedule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterRelSchedule resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/external_call_filter_rel_schedules\/{id}": {
            "get": {
                "tags": [
                    "ExternalCallFilterRelSchedule"
                ],
                "operationId": "getExternalCallFilterRelScheduleItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ExternalCallFilterRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelSchedule-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalCallFilterRelSchedule"
                ],
                "operationId": "putExternalCallFilterRelScheduleItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ExternalCallFilterRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "externalCallFilterRelSchedule",
                        "in": "body",
                        "description": "The updated ExternalCallFilterRelSchedule resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalCallFilterRelSchedule"
                ],
                "operationId": "deleteExternalCallFilterRelScheduleItem",
                "summary": "Removes the ExternalCallFilterRelSchedule resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterRelSchedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/external_call_filter_white_lists": {
            "get": {
                "tags": [
                    "ExternalCallFilterWhiteList"
                ],
                "operationId": "getExternalCallFilterWhiteListCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ExternalCallFilterWhiteList resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ExternalCallFilterWhiteList-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExternalCallFilterWhiteList"
                ],
                "operationId": "postExternalCallFilterWhiteListCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ExternalCallFilterWhiteList resource.",
                "parameters": [
                    {
                        "name": "externalCallFilterWhiteList",
                        "in": "body",
                        "description": "The new ExternalCallFilterWhiteList resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterWhiteList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterWhiteList resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterWhiteList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/external_call_filter_white_lists\/{id}": {
            "get": {
                "tags": [
                    "ExternalCallFilterWhiteList"
                ],
                "operationId": "getExternalCallFilterWhiteListItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ExternalCallFilterWhiteList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterWhiteList-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalCallFilterWhiteList"
                ],
                "operationId": "putExternalCallFilterWhiteListItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ExternalCallFilterWhiteList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "externalCallFilterWhiteList",
                        "in": "body",
                        "description": "The updated ExternalCallFilterWhiteList resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterWhiteList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilterWhiteList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalCallFilterWhiteList"
                ],
                "operationId": "deleteExternalCallFilterWhiteListItem",
                "summary": "Removes the ExternalCallFilterWhiteList resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterWhiteList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/external_call_filters": {
            "get": {
                "tags": [
                    "ExternalCallFilter"
                ],
                "operationId": "getExternalCallFilterCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ExternalCallFilter resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ExternalCallFilter-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExternalCallFilter"
                ],
                "operationId": "postExternalCallFilterCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ExternalCallFilter resource.",
                "parameters": [
                    {
                        "name": "externalCallFilter",
                        "in": "body",
                        "description": "The new ExternalCallFilter resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ExternalCallFilter resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilter"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/external_call_filters\/{id}": {
            "get": {
                "tags": [
                    "ExternalCallFilter"
                ],
                "operationId": "getExternalCallFilterItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ExternalCallFilter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilter-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalCallFilter"
                ],
                "operationId": "putExternalCallFilterItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ExternalCallFilter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "externalCallFilter",
                        "in": "body",
                        "description": "The updated ExternalCallFilter resource",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ExternalCallFilter"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalCallFilter"
                ],
                "operationId": "deleteExternalCallFilterItem",
                "summary": "Removes the ExternalCallFilter resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilter resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/faxes": {
            "get": {
                "tags": [
                    "Fax"
                ],
                "operationId": "getFaxCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Fax resources.",
                "responses": {
                    "200": {
                        "description": "Fax collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Fax-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fax"
                ],
                "operationId": "postFaxCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Fax resource.",
                "parameters": [
                    {
                        "name": "fax",
                        "in": "body",
                        "description": "The new Fax resource",
                        "schema": {
                            "$ref": "#\/definitions\/Fax"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Fax resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Fax"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/faxes\/{id}": {
            "get": {
                "tags": [
                    "Fax"
                ],
                "operationId": "getFaxItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Fax resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fax resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Fax-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Fax"
                ],
                "operationId": "putFaxItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Fax resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "fax",
                        "in": "body",
                        "description": "The updated Fax resource",
                        "schema": {
                            "$ref": "#\/definitions\/Fax"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fax resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Fax"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fax"
                ],
                "operationId": "deleteFaxItem",
                "summary": "Removes the Fax resource.",
                "responses": {
                    "204": {
                        "description": "Fax resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/faxes_in_outs": {
            "get": {
                "tags": [
                    "FaxesInOut"
                ],
                "operationId": "getFaxesInOutCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FaxesInOut resources.",
                "responses": {
                    "200": {
                        "description": "FaxesInOut collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FaxesInOut-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FaxesInOut"
                ],
                "operationId": "postFaxesInOutCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FaxesInOut resource.",
                "parameters": [
                    {
                        "name": "faxesInOut",
                        "in": "body",
                        "description": "The new FaxesInOut resource",
                        "schema": {
                            "$ref": "#\/definitions\/FaxesInOut"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FaxesInOut resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FaxesInOut"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/faxes_in_outs\/{id}": {
            "get": {
                "tags": [
                    "FaxesInOut"
                ],
                "operationId": "getFaxesInOutItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FaxesInOut resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FaxesInOut resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FaxesInOut-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FaxesInOut"
                ],
                "operationId": "putFaxesInOutItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FaxesInOut resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "faxesInOut",
                        "in": "body",
                        "description": "The updated FaxesInOut resource",
                        "schema": {
                            "$ref": "#\/definitions\/FaxesInOut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FaxesInOut resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FaxesInOut"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FaxesInOut"
                ],
                "operationId": "deleteFaxesInOutItem",
                "summary": "Removes the FaxesInOut resource.",
                "responses": {
                    "204": {
                        "description": "FaxesInOut resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/features": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "operationId": "getFeatureCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Feature resources.",
                "responses": {
                    "200": {
                        "description": "Feature collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Feature-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Feature"
                ],
                "operationId": "postFeatureCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Feature resource.",
                "parameters": [
                    {
                        "name": "feature",
                        "in": "body",
                        "description": "The new Feature resource",
                        "schema": {
                            "$ref": "#\/definitions\/Feature"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feature resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Feature"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/features\/{id}": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "operationId": "getFeatureItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Feature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Feature-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Feature"
                ],
                "operationId": "putFeatureItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Feature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "feature",
                        "in": "body",
                        "description": "The updated Feature resource",
                        "schema": {
                            "$ref": "#\/definitions\/Feature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Feature"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feature"
                ],
                "operationId": "deleteFeatureItem",
                "summary": "Removes the Feature resource.",
                "responses": {
                    "204": {
                        "description": "Feature resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/features_rel_brands": {
            "get": {
                "tags": [
                    "FeaturesRelBrand"
                ],
                "operationId": "getFeaturesRelBrandCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FeaturesRelBrand resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FeaturesRelBrand-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FeaturesRelBrand"
                ],
                "operationId": "postFeaturesRelBrandCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "featuresRelBrand",
                        "in": "body",
                        "description": "The new FeaturesRelBrand resource",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelBrand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FeaturesRelBrand resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/features_rel_brands\/{id}": {
            "get": {
                "tags": [
                    "FeaturesRelBrand"
                ],
                "operationId": "getFeaturesRelBrandItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelBrand-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturesRelBrand"
                ],
                "operationId": "putFeaturesRelBrandItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "featuresRelBrand",
                        "in": "body",
                        "description": "The updated FeaturesRelBrand resource",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FeaturesRelBrand"
                ],
                "operationId": "deleteFeaturesRelBrandItem",
                "summary": "Removes the FeaturesRelBrand resource.",
                "responses": {
                    "204": {
                        "description": "FeaturesRelBrand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/features_rel_companies": {
            "get": {
                "tags": [
                    "FeaturesRelCompany"
                ],
                "operationId": "getFeaturesRelCompanyCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FeaturesRelCompany resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FeaturesRelCompany-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FeaturesRelCompany"
                ],
                "operationId": "postFeaturesRelCompanyCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FeaturesRelCompany resource.",
                "parameters": [
                    {
                        "name": "featuresRelCompany",
                        "in": "body",
                        "description": "The new FeaturesRelCompany resource",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelCompany"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FeaturesRelCompany resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelCompany"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/features_rel_companies\/{id}": {
            "get": {
                "tags": [
                    "FeaturesRelCompany"
                ],
                "operationId": "getFeaturesRelCompanyItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FeaturesRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelCompany-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturesRelCompany"
                ],
                "operationId": "putFeaturesRelCompanyItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FeaturesRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "featuresRelCompany",
                        "in": "body",
                        "description": "The updated FeaturesRelCompany resource",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FeaturesRelCompany"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FeaturesRelCompany"
                ],
                "operationId": "deleteFeaturesRelCompanyItem",
                "summary": "Removes the FeaturesRelCompany resource.",
                "responses": {
                    "204": {
                        "description": "FeaturesRelCompany resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/fixed_costs": {
            "get": {
                "tags": [
                    "FixedCost"
                ],
                "operationId": "getFixedCostCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FixedCost resources.",
                "responses": {
                    "200": {
                        "description": "FixedCost collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FixedCost-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FixedCost"
                ],
                "operationId": "postFixedCostCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FixedCost resource.",
                "parameters": [
                    {
                        "name": "fixedCost",
                        "in": "body",
                        "description": "The new FixedCost resource",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FixedCost resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCost"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/fixed_costs\/{id}": {
            "get": {
                "tags": [
                    "FixedCost"
                ],
                "operationId": "getFixedCostItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FixedCost resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCost resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCost-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FixedCost"
                ],
                "operationId": "putFixedCostItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FixedCost resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "fixedCost",
                        "in": "body",
                        "description": "The updated FixedCost resource",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCost resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCost"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FixedCost"
                ],
                "operationId": "deleteFixedCostItem",
                "summary": "Removes the FixedCost resource.",
                "responses": {
                    "204": {
                        "description": "FixedCost resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/fixed_costs_rel_invoices": {
            "get": {
                "tags": [
                    "FixedCostsRelInvoice"
                ],
                "operationId": "getFixedCostsRelInvoiceCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FixedCostsRelInvoice resources.",
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FixedCostsRelInvoice-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FixedCostsRelInvoice"
                ],
                "operationId": "postFixedCostsRelInvoiceCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FixedCostsRelInvoice resource.",
                "parameters": [
                    {
                        "name": "fixedCostsRelInvoice",
                        "in": "body",
                        "description": "The new FixedCostsRelInvoice resource",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCostsRelInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FixedCostsRelInvoice resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCostsRelInvoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/fixed_costs_rel_invoices\/{id}": {
            "get": {
                "tags": [
                    "FixedCostsRelInvoice"
                ],
                "operationId": "getFixedCostsRelInvoiceItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FixedCostsRelInvoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCostsRelInvoice-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FixedCostsRelInvoice"
                ],
                "operationId": "putFixedCostsRelInvoiceItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FixedCostsRelInvoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "fixedCostsRelInvoice",
                        "in": "body",
                        "description": "The updated FixedCostsRelInvoice resource",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCostsRelInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FixedCostsRelInvoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FixedCostsRelInvoice"
                ],
                "operationId": "deleteFixedCostsRelInvoiceItem",
                "summary": "Removes the FixedCostsRelInvoice resource.",
                "responses": {
                    "204": {
                        "description": "FixedCostsRelInvoice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/friends": {
            "get": {
                "tags": [
                    "Friend"
                ],
                "operationId": "getFriendCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Friend resources.",
                "responses": {
                    "200": {
                        "description": "Friend collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Friend-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Friend"
                ],
                "operationId": "postFriendCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Friend resource.",
                "parameters": [
                    {
                        "name": "friend",
                        "in": "body",
                        "description": "The new Friend resource",
                        "schema": {
                            "$ref": "#\/definitions\/Friend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Friend resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/friends\/{id}": {
            "get": {
                "tags": [
                    "Friend"
                ],
                "operationId": "getFriendItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Friend-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Friend"
                ],
                "operationId": "putFriendItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "friend",
                        "in": "body",
                        "description": "The updated Friend resource",
                        "schema": {
                            "$ref": "#\/definitions\/Friend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Friend"
                ],
                "operationId": "deleteFriendItem",
                "summary": "Removes the Friend resource.",
                "responses": {
                    "204": {
                        "description": "Friend resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/friends_patterns": {
            "get": {
                "tags": [
                    "FriendsPattern"
                ],
                "operationId": "getFriendsPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of FriendsPattern resources.",
                "responses": {
                    "200": {
                        "description": "FriendsPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/FriendsPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FriendsPattern"
                ],
                "operationId": "postFriendsPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a FriendsPattern resource.",
                "parameters": [
                    {
                        "name": "friendsPattern",
                        "in": "body",
                        "description": "The new FriendsPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/FriendsPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "FriendsPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/FriendsPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/friends_patterns\/{id}": {
            "get": {
                "tags": [
                    "FriendsPattern"
                ],
                "operationId": "getFriendsPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a FriendsPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FriendsPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/FriendsPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FriendsPattern"
                ],
                "operationId": "putFriendsPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the FriendsPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "friendsPattern",
                        "in": "body",
                        "description": "The updated FriendsPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/FriendsPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FriendsPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/FriendsPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FriendsPattern"
                ],
                "operationId": "deleteFriendsPatternItem",
                "summary": "Removes the FriendsPattern resource.",
                "responses": {
                    "204": {
                        "description": "FriendsPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/holiday_dates": {
            "get": {
                "tags": [
                    "HolidayDate"
                ],
                "operationId": "getHolidayDateCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of HolidayDate resources.",
                "responses": {
                    "200": {
                        "description": "HolidayDate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/HolidayDate-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "HolidayDate"
                ],
                "operationId": "postHolidayDateCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a HolidayDate resource.",
                "parameters": [
                    {
                        "name": "holidayDate",
                        "in": "body",
                        "description": "The new HolidayDate resource",
                        "schema": {
                            "$ref": "#\/definitions\/HolidayDate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "HolidayDate resource created",
                        "schema": {
                            "$ref": "#\/definitions\/HolidayDate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/holiday_dates\/{id}": {
            "get": {
                "tags": [
                    "HolidayDate"
                ],
                "operationId": "getHolidayDateItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a HolidayDate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HolidayDate resource response",
                        "schema": {
                            "$ref": "#\/definitions\/HolidayDate-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "HolidayDate"
                ],
                "operationId": "putHolidayDateItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the HolidayDate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "holidayDate",
                        "in": "body",
                        "description": "The updated HolidayDate resource",
                        "schema": {
                            "$ref": "#\/definitions\/HolidayDate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HolidayDate resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/HolidayDate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "HolidayDate"
                ],
                "operationId": "deleteHolidayDateItem",
                "summary": "Removes the HolidayDate resource.",
                "responses": {
                    "204": {
                        "description": "HolidayDate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/hunt_groups": {
            "get": {
                "tags": [
                    "HuntGroup"
                ],
                "operationId": "getHuntGroupCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of HuntGroup resources.",
                "responses": {
                    "200": {
                        "description": "HuntGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/HuntGroup-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "HuntGroup"
                ],
                "operationId": "postHuntGroupCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a HuntGroup resource.",
                "parameters": [
                    {
                        "name": "huntGroup",
                        "in": "body",
                        "description": "The new HuntGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "HuntGroup resource created",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/hunt_groups\/{id}": {
            "get": {
                "tags": [
                    "HuntGroup"
                ],
                "operationId": "getHuntGroupItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a HuntGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroup resource response",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroup-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "HuntGroup"
                ],
                "operationId": "putHuntGroupItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the HuntGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "huntGroup",
                        "in": "body",
                        "description": "The updated HuntGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroup resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "HuntGroup"
                ],
                "operationId": "deleteHuntGroupItem",
                "summary": "Removes the HuntGroup resource.",
                "responses": {
                    "204": {
                        "description": "HuntGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/hunt_groups_rel_users": {
            "get": {
                "tags": [
                    "HuntGroupsRelUser"
                ],
                "operationId": "getHuntGroupsRelUserCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of HuntGroupsRelUser resources.",
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/HuntGroupsRelUser-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "HuntGroupsRelUser"
                ],
                "operationId": "postHuntGroupsRelUserCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a HuntGroupsRelUser resource.",
                "parameters": [
                    {
                        "name": "huntGroupsRelUser",
                        "in": "body",
                        "description": "The new HuntGroupsRelUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroupsRelUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "HuntGroupsRelUser resource created",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroupsRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/hunt_groups_rel_users\/{id}": {
            "get": {
                "tags": [
                    "HuntGroupsRelUser"
                ],
                "operationId": "getHuntGroupsRelUserItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a HuntGroupsRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser resource response",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroupsRelUser-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "HuntGroupsRelUser"
                ],
                "operationId": "putHuntGroupsRelUserItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the HuntGroupsRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "huntGroupsRelUser",
                        "in": "body",
                        "description": "The updated HuntGroupsRelUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroupsRelUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/HuntGroupsRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "HuntGroupsRelUser"
                ],
                "operationId": "deleteHuntGroupsRelUserItem",
                "summary": "Removes the HuntGroupsRelUser resource.",
                "responses": {
                    "204": {
                        "description": "HuntGroupsRelUser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/invoice_templates": {
            "get": {
                "tags": [
                    "InvoiceTemplate"
                ],
                "operationId": "getInvoiceTemplateCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of InvoiceTemplate resources.",
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/InvoiceTemplate-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "InvoiceTemplate"
                ],
                "operationId": "postInvoiceTemplateCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "invoiceTemplate",
                        "in": "body",
                        "description": "The new InvoiceTemplate resource",
                        "schema": {
                            "$ref": "#\/definitions\/InvoiceTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "InvoiceTemplate resource created",
                        "schema": {
                            "$ref": "#\/definitions\/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/invoice_templates\/{id}": {
            "get": {
                "tags": [
                    "InvoiceTemplate"
                ],
                "operationId": "getInvoiceTemplateItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource response",
                        "schema": {
                            "$ref": "#\/definitions\/InvoiceTemplate-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "InvoiceTemplate"
                ],
                "operationId": "putInvoiceTemplateItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "invoiceTemplate",
                        "in": "body",
                        "description": "The updated InvoiceTemplate resource",
                        "schema": {
                            "$ref": "#\/definitions\/InvoiceTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "InvoiceTemplate"
                ],
                "operationId": "deleteInvoiceTemplateItem",
                "summary": "Removes the InvoiceTemplate resource.",
                "responses": {
                    "204": {
                        "description": "InvoiceTemplate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "operationId": "getInvoiceCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Invoice resources.",
                "responses": {
                    "200": {
                        "description": "Invoice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Invoice-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Invoice"
                ],
                "operationId": "postInvoiceCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Invoice resource.",
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "body",
                        "description": "The new Invoice resource",
                        "schema": {
                            "$ref": "#\/definitions\/Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invoice resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/invoices\/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "operationId": "getInvoiceItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Invoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Invoice-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "operationId": "putInvoiceItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Invoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "invoice",
                        "in": "body",
                        "description": "The updated Invoice resource",
                        "schema": {
                            "$ref": "#\/definitions\/Invoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "operationId": "deleteInvoiceItem",
                "summary": "Removes the Invoice resource.",
                "responses": {
                    "204": {
                        "description": "Invoice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/ivr_entries": {
            "get": {
                "tags": [
                    "IvrEntry"
                ],
                "operationId": "getIvrEntryCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of IvrEntry resources.",
                "responses": {
                    "200": {
                        "description": "IvrEntry collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/IvrEntry-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "IvrEntry"
                ],
                "operationId": "postIvrEntryCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a IvrEntry resource.",
                "parameters": [
                    {
                        "name": "ivrEntry",
                        "in": "body",
                        "description": "The new IvrEntry resource",
                        "schema": {
                            "$ref": "#\/definitions\/IvrEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "IvrEntry resource created",
                        "schema": {
                            "$ref": "#\/definitions\/IvrEntry"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/ivr_entries\/{id}": {
            "get": {
                "tags": [
                    "IvrEntry"
                ],
                "operationId": "getIvrEntryItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a IvrEntry resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrEntry resource response",
                        "schema": {
                            "$ref": "#\/definitions\/IvrEntry-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "IvrEntry"
                ],
                "operationId": "putIvrEntryItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the IvrEntry resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "ivrEntry",
                        "in": "body",
                        "description": "The updated IvrEntry resource",
                        "schema": {
                            "$ref": "#\/definitions\/IvrEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrEntry resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/IvrEntry"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IvrEntry"
                ],
                "operationId": "deleteIvrEntryItem",
                "summary": "Removes the IvrEntry resource.",
                "responses": {
                    "204": {
                        "description": "IvrEntry resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/ivr_excluded_extensions": {
            "get": {
                "tags": [
                    "IvrExcludedExtension"
                ],
                "operationId": "getIvrExcludedExtensionCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of IvrExcludedExtension resources.",
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/IvrExcludedExtension-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "IvrExcludedExtension"
                ],
                "operationId": "postIvrExcludedExtensionCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a IvrExcludedExtension resource.",
                "parameters": [
                    {
                        "name": "ivrExcludedExtension",
                        "in": "body",
                        "description": "The new IvrExcludedExtension resource",
                        "schema": {
                            "$ref": "#\/definitions\/IvrExcludedExtension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "IvrExcludedExtension resource created",
                        "schema": {
                            "$ref": "#\/definitions\/IvrExcludedExtension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/ivr_excluded_extensions\/{id}": {
            "get": {
                "tags": [
                    "IvrExcludedExtension"
                ],
                "operationId": "getIvrExcludedExtensionItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a IvrExcludedExtension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension resource response",
                        "schema": {
                            "$ref": "#\/definitions\/IvrExcludedExtension-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "IvrExcludedExtension"
                ],
                "operationId": "putIvrExcludedExtensionItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the IvrExcludedExtension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "ivrExcludedExtension",
                        "in": "body",
                        "description": "The updated IvrExcludedExtension resource",
                        "schema": {
                            "$ref": "#\/definitions\/IvrExcludedExtension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/IvrExcludedExtension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IvrExcludedExtension"
                ],
                "operationId": "deleteIvrExcludedExtensionItem",
                "summary": "Removes the IvrExcludedExtension resource.",
                "responses": {
                    "204": {
                        "description": "IvrExcludedExtension resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/ivrs": {
            "get": {
                "tags": [
                    "Ivr"
                ],
                "operationId": "getIvrCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Ivr resources.",
                "responses": {
                    "200": {
                        "description": "Ivr collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Ivr-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ivr"
                ],
                "operationId": "postIvrCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Ivr resource.",
                "parameters": [
                    {
                        "name": "ivr",
                        "in": "body",
                        "description": "The new Ivr resource",
                        "schema": {
                            "$ref": "#\/definitions\/Ivr"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ivr resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Ivr"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/ivrs\/{id}": {
            "get": {
                "tags": [
                    "Ivr"
                ],
                "operationId": "getIvrItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Ivr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ivr resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Ivr-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ivr"
                ],
                "operationId": "putIvrItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Ivr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "ivr",
                        "in": "body",
                        "description": "The updated Ivr resource",
                        "schema": {
                            "$ref": "#\/definitions\/Ivr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ivr resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Ivr"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ivr"
                ],
                "operationId": "deleteIvrItem",
                "summary": "Removes the Ivr resource.",
                "responses": {
                    "204": {
                        "description": "Ivr resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "operationId": "getLanguageCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Language resources.",
                "responses": {
                    "200": {
                        "description": "Language collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Language-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Language"
                ],
                "operationId": "postLanguageCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Language resource.",
                "parameters": [
                    {
                        "name": "language",
                        "in": "body",
                        "description": "The new Language resource",
                        "schema": {
                            "$ref": "#\/definitions\/Language"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Language resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Language"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/languages\/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "operationId": "getLanguageItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Language resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Language-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Language"
                ],
                "operationId": "putLanguageItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Language resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "language",
                        "in": "body",
                        "description": "The updated Language resource",
                        "schema": {
                            "$ref": "#\/definitions\/Language"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Language"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "operationId": "deleteLanguageItem",
                "summary": "Removes the Language resource.",
                "responses": {
                    "204": {
                        "description": "Language resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/lcr_gateways": {
            "get": {
                "tags": [
                    "LcrGateway"
                ],
                "operationId": "getLcrGatewayCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of LcrGateway resources.",
                "responses": {
                    "200": {
                        "description": "LcrGateway collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/LcrGateway-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "LcrGateway"
                ],
                "operationId": "postLcrGatewayCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a LcrGateway resource.",
                "parameters": [
                    {
                        "name": "lcrGateway",
                        "in": "body",
                        "description": "The new LcrGateway resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrGateway"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "LcrGateway resource created",
                        "schema": {
                            "$ref": "#\/definitions\/LcrGateway"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/lcr_gateways\/{id}": {
            "get": {
                "tags": [
                    "LcrGateway"
                ],
                "operationId": "getLcrGatewayItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a LcrGateway resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrGateway resource response",
                        "schema": {
                            "$ref": "#\/definitions\/LcrGateway-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "LcrGateway"
                ],
                "operationId": "putLcrGatewayItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the LcrGateway resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "lcrGateway",
                        "in": "body",
                        "description": "The updated LcrGateway resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrGateway"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrGateway resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/LcrGateway"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "LcrGateway"
                ],
                "operationId": "deleteLcrGatewayItem",
                "summary": "Removes the LcrGateway resource.",
                "responses": {
                    "204": {
                        "description": "LcrGateway resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/lcr_rule_targets": {
            "get": {
                "tags": [
                    "LcrRuleTarget"
                ],
                "operationId": "getLcrRuleTargetCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of LcrRuleTarget resources.",
                "responses": {
                    "200": {
                        "description": "LcrRuleTarget collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/LcrRuleTarget-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "LcrRuleTarget"
                ],
                "operationId": "postLcrRuleTargetCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a LcrRuleTarget resource.",
                "parameters": [
                    {
                        "name": "lcrRuleTarget",
                        "in": "body",
                        "description": "The new LcrRuleTarget resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRuleTarget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "LcrRuleTarget resource created",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRuleTarget"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/lcr_rule_targets\/{id}": {
            "get": {
                "tags": [
                    "LcrRuleTarget"
                ],
                "operationId": "getLcrRuleTargetItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a LcrRuleTarget resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrRuleTarget resource response",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRuleTarget-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "LcrRuleTarget"
                ],
                "operationId": "putLcrRuleTargetItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the LcrRuleTarget resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "lcrRuleTarget",
                        "in": "body",
                        "description": "The updated LcrRuleTarget resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRuleTarget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrRuleTarget resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRuleTarget"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "LcrRuleTarget"
                ],
                "operationId": "deleteLcrRuleTargetItem",
                "summary": "Removes the LcrRuleTarget resource.",
                "responses": {
                    "204": {
                        "description": "LcrRuleTarget resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/lcr_rules": {
            "get": {
                "tags": [
                    "LcrRule"
                ],
                "operationId": "getLcrRuleCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of LcrRule resources.",
                "responses": {
                    "200": {
                        "description": "LcrRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/LcrRule-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "LcrRule"
                ],
                "operationId": "postLcrRuleCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a LcrRule resource.",
                "parameters": [
                    {
                        "name": "lcrRule",
                        "in": "body",
                        "description": "The new LcrRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "LcrRule resource created",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/lcr_rules\/{id}": {
            "get": {
                "tags": [
                    "LcrRule"
                ],
                "operationId": "getLcrRuleItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a LcrRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrRule resource response",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRule-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "LcrRule"
                ],
                "operationId": "putLcrRuleItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the LcrRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "lcrRule",
                        "in": "body",
                        "description": "The updated LcrRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LcrRule resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/LcrRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "LcrRule"
                ],
                "operationId": "deleteLcrRuleItem",
                "summary": "Removes the LcrRule resource.",
                "responses": {
                    "204": {
                        "description": "LcrRule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/locutions": {
            "get": {
                "tags": [
                    "Locution"
                ],
                "operationId": "getLocutionCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Locution resources.",
                "responses": {
                    "200": {
                        "description": "Locution collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Locution-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locution"
                ],
                "operationId": "postLocutionCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Locution resource.",
                "parameters": [
                    {
                        "name": "locution",
                        "in": "body",
                        "description": "The new Locution resource",
                        "schema": {
                            "$ref": "#\/definitions\/Locution"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Locution resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Locution"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/locutions\/{id}": {
            "get": {
                "tags": [
                    "Locution"
                ],
                "operationId": "getLocutionItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locution resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Locution-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Locution"
                ],
                "operationId": "putLocutionItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "locution",
                        "in": "body",
                        "description": "The updated Locution resource",
                        "schema": {
                            "$ref": "#\/definitions\/Locution"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locution resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Locution"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locution"
                ],
                "operationId": "deleteLocutionItem",
                "summary": "Removes the Locution resource.",
                "responses": {
                    "204": {
                        "description": "Locution resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/match_list_patterns": {
            "get": {
                "tags": [
                    "MatchListPattern"
                ],
                "operationId": "getMatchListPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of MatchListPattern resources.",
                "responses": {
                    "200": {
                        "description": "MatchListPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/MatchListPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MatchListPattern"
                ],
                "operationId": "postMatchListPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "matchListPattern",
                        "in": "body",
                        "description": "The new MatchListPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/MatchListPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MatchListPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/match_list_patterns\/{id}": {
            "get": {
                "tags": [
                    "MatchListPattern"
                ],
                "operationId": "getMatchListPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/MatchListPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "MatchListPattern"
                ],
                "operationId": "putMatchListPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "matchListPattern",
                        "in": "body",
                        "description": "The updated MatchListPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/MatchListPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MatchListPattern"
                ],
                "operationId": "deleteMatchListPatternItem",
                "summary": "Removes the MatchListPattern resource.",
                "responses": {
                    "204": {
                        "description": "MatchListPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/match_lists": {
            "get": {
                "tags": [
                    "MatchList"
                ],
                "operationId": "getMatchListCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of MatchList resources.",
                "responses": {
                    "200": {
                        "description": "MatchList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/MatchList-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MatchList"
                ],
                "operationId": "postMatchListCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a MatchList resource.",
                "parameters": [
                    {
                        "name": "matchList",
                        "in": "body",
                        "description": "The new MatchList resource",
                        "schema": {
                            "$ref": "#\/definitions\/MatchList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MatchList resource created",
                        "schema": {
                            "$ref": "#\/definitions\/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/match_lists\/{id}": {
            "get": {
                "tags": [
                    "MatchList"
                ],
                "operationId": "getMatchListItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource response",
                        "schema": {
                            "$ref": "#\/definitions\/MatchList-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "MatchList"
                ],
                "operationId": "putMatchListItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "matchList",
                        "in": "body",
                        "description": "The updated MatchList resource",
                        "schema": {
                            "$ref": "#\/definitions\/MatchList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MatchList"
                ],
                "operationId": "deleteMatchListItem",
                "summary": "Removes the MatchList resource.",
                "responses": {
                    "204": {
                        "description": "MatchList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/media_relay_sets": {
            "get": {
                "tags": [
                    "MediaRelaySet"
                ],
                "operationId": "getMediaRelaySetCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of MediaRelaySet resources.",
                "responses": {
                    "200": {
                        "description": "MediaRelaySet collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/MediaRelaySet-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MediaRelaySet"
                ],
                "operationId": "postMediaRelaySetCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a MediaRelaySet resource.",
                "parameters": [
                    {
                        "name": "mediaRelaySet",
                        "in": "body",
                        "description": "The new MediaRelaySet resource",
                        "schema": {
                            "$ref": "#\/definitions\/MediaRelaySet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MediaRelaySet resource created",
                        "schema": {
                            "$ref": "#\/definitions\/MediaRelaySet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/media_relay_sets\/{id}": {
            "get": {
                "tags": [
                    "MediaRelaySet"
                ],
                "operationId": "getMediaRelaySetItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a MediaRelaySet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaRelaySet resource response",
                        "schema": {
                            "$ref": "#\/definitions\/MediaRelaySet-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "MediaRelaySet"
                ],
                "operationId": "putMediaRelaySetItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the MediaRelaySet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "mediaRelaySet",
                        "in": "body",
                        "description": "The updated MediaRelaySet resource",
                        "schema": {
                            "$ref": "#\/definitions\/MediaRelaySet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaRelaySet resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/MediaRelaySet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MediaRelaySet"
                ],
                "operationId": "deleteMediaRelaySetItem",
                "summary": "Removes the MediaRelaySet resource.",
                "responses": {
                    "204": {
                        "description": "MediaRelaySet resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/music_on_holds": {
            "get": {
                "tags": [
                    "MusicOnHold"
                ],
                "operationId": "getMusicOnHoldCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of MusicOnHold resources.",
                "responses": {
                    "200": {
                        "description": "MusicOnHold collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/MusicOnHold-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MusicOnHold"
                ],
                "operationId": "postMusicOnHoldCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "musicOnHold",
                        "in": "body",
                        "description": "The new MusicOnHold resource",
                        "schema": {
                            "$ref": "#\/definitions\/MusicOnHold"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MusicOnHold resource created",
                        "schema": {
                            "$ref": "#\/definitions\/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/music_on_holds\/{id}": {
            "get": {
                "tags": [
                    "MusicOnHold"
                ],
                "operationId": "getMusicOnHoldItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource response",
                        "schema": {
                            "$ref": "#\/definitions\/MusicOnHold-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "MusicOnHold"
                ],
                "operationId": "putMusicOnHoldItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "musicOnHold",
                        "in": "body",
                        "description": "The updated MusicOnHold resource",
                        "schema": {
                            "$ref": "#\/definitions\/MusicOnHold"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MusicOnHold"
                ],
                "operationId": "deleteMusicOnHoldItem",
                "summary": "Removes the MusicOnHold resource.",
                "responses": {
                    "204": {
                        "description": "MusicOnHold resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/outgoing_ddi_rules": {
            "get": {
                "tags": [
                    "OutgoingDdiRule"
                ],
                "operationId": "getOutgoingDdiRuleCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of OutgoingDdiRule resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/OutgoingDdiRule-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OutgoingDdiRule"
                ],
                "operationId": "postOutgoingDdiRuleCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "outgoingDdiRule",
                        "in": "body",
                        "description": "The new OutgoingDdiRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OutgoingDdiRule resource created",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/outgoing_ddi_rules\/{id}": {
            "get": {
                "tags": [
                    "OutgoingDdiRule"
                ],
                "operationId": "getOutgoingDdiRuleItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule resource response",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRule-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "OutgoingDdiRule"
                ],
                "operationId": "putOutgoingDdiRuleItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "body",
                        "description": "The updated OutgoingDdiRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OutgoingDdiRule"
                ],
                "operationId": "deleteOutgoingDdiRuleItem",
                "summary": "Removes the OutgoingDdiRule resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingDdiRule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/outgoing_ddi_rules_patterns": {
            "get": {
                "tags": [
                    "OutgoingDdiRulesPattern"
                ],
                "operationId": "getOutgoingDdiRulesPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of OutgoingDdiRulesPattern resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/OutgoingDdiRulesPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OutgoingDdiRulesPattern"
                ],
                "operationId": "postOutgoingDdiRulesPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a OutgoingDdiRulesPattern resource.",
                "parameters": [
                    {
                        "name": "outgoingDdiRulesPattern",
                        "in": "body",
                        "description": "The new OutgoingDdiRulesPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRulesPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OutgoingDdiRulesPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRulesPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/outgoing_ddi_rules_patterns\/{id}": {
            "get": {
                "tags": [
                    "OutgoingDdiRulesPattern"
                ],
                "operationId": "getOutgoingDdiRulesPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a OutgoingDdiRulesPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRulesPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "OutgoingDdiRulesPattern"
                ],
                "operationId": "putOutgoingDdiRulesPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the OutgoingDdiRulesPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "outgoingDdiRulesPattern",
                        "in": "body",
                        "description": "The updated OutgoingDdiRulesPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRulesPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingDdiRulesPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OutgoingDdiRulesPattern"
                ],
                "operationId": "deleteOutgoingDdiRulesPatternItem",
                "summary": "Removes the OutgoingDdiRulesPattern resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingDdiRulesPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/outgoing_routings": {
            "get": {
                "tags": [
                    "OutgoingRouting"
                ],
                "operationId": "getOutgoingRoutingCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of OutgoingRouting resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingRouting collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/OutgoingRouting-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OutgoingRouting"
                ],
                "operationId": "postOutgoingRoutingCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a OutgoingRouting resource.",
                "parameters": [
                    {
                        "name": "outgoingRouting",
                        "in": "body",
                        "description": "The new OutgoingRouting resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingRouting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OutgoingRouting resource created",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingRouting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/outgoing_routings\/{id}": {
            "get": {
                "tags": [
                    "OutgoingRouting"
                ],
                "operationId": "getOutgoingRoutingItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a OutgoingRouting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingRouting resource response",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingRouting-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "OutgoingRouting"
                ],
                "operationId": "putOutgoingRoutingItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the OutgoingRouting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "outgoingRouting",
                        "in": "body",
                        "description": "The updated OutgoingRouting resource",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingRouting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingRouting resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/OutgoingRouting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OutgoingRouting"
                ],
                "operationId": "deleteOutgoingRoutingItem",
                "summary": "Removes the OutgoingRouting resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingRouting resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/parsed_cdrs": {
            "get": {
                "tags": [
                    "ParsedCdr"
                ],
                "operationId": "getParsedCdrCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ParsedCdr resources.",
                "responses": {
                    "200": {
                        "description": "ParsedCdr collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ParsedCdr-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ParsedCdr"
                ],
                "operationId": "postParsedCdrCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ParsedCdr resource.",
                "parameters": [
                    {
                        "name": "parsedCdr",
                        "in": "body",
                        "description": "The new ParsedCdr resource",
                        "schema": {
                            "$ref": "#\/definitions\/ParsedCdr"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ParsedCdr resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ParsedCdr"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/parsed_cdrs\/{id}": {
            "get": {
                "tags": [
                    "ParsedCdr"
                ],
                "operationId": "getParsedCdrItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ParsedCdr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ParsedCdr resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ParsedCdr-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ParsedCdr"
                ],
                "operationId": "putParsedCdrItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ParsedCdr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "parsedCdr",
                        "in": "body",
                        "description": "The updated ParsedCdr resource",
                        "schema": {
                            "$ref": "#\/definitions\/ParsedCdr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ParsedCdr resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ParsedCdr"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ParsedCdr"
                ],
                "operationId": "deleteParsedCdrItem",
                "summary": "Removes the ParsedCdr resource.",
                "responses": {
                    "204": {
                        "description": "ParsedCdr resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/peer_servers": {
            "get": {
                "tags": [
                    "PeerServer"
                ],
                "operationId": "getPeerServerCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PeerServer resources.",
                "responses": {
                    "200": {
                        "description": "PeerServer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PeerServer-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PeerServer"
                ],
                "operationId": "postPeerServerCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PeerServer resource.",
                "parameters": [
                    {
                        "name": "peerServer",
                        "in": "body",
                        "description": "The new PeerServer resource",
                        "schema": {
                            "$ref": "#\/definitions\/PeerServer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PeerServer resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PeerServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/peer_servers\/{id}": {
            "get": {
                "tags": [
                    "PeerServer"
                ],
                "operationId": "getPeerServerItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PeerServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PeerServer resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PeerServer-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PeerServer"
                ],
                "operationId": "putPeerServerItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PeerServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "peerServer",
                        "in": "body",
                        "description": "The updated PeerServer resource",
                        "schema": {
                            "$ref": "#\/definitions\/PeerServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PeerServer resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PeerServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PeerServer"
                ],
                "operationId": "deletePeerServerItem",
                "summary": "Removes the PeerServer resource.",
                "responses": {
                    "204": {
                        "description": "PeerServer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/peering_contracts": {
            "get": {
                "tags": [
                    "PeeringContract"
                ],
                "operationId": "getPeeringContractCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PeeringContract resources.",
                "responses": {
                    "200": {
                        "description": "PeeringContract collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PeeringContract-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PeeringContract"
                ],
                "operationId": "postPeeringContractCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PeeringContract resource.",
                "parameters": [
                    {
                        "name": "peeringContract",
                        "in": "body",
                        "description": "The new PeeringContract resource",
                        "schema": {
                            "$ref": "#\/definitions\/PeeringContract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PeeringContract resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PeeringContract"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/peering_contracts\/{id}": {
            "get": {
                "tags": [
                    "PeeringContract"
                ],
                "operationId": "getPeeringContractItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PeeringContract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PeeringContract resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PeeringContract-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PeeringContract"
                ],
                "operationId": "putPeeringContractItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PeeringContract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "peeringContract",
                        "in": "body",
                        "description": "The updated PeeringContract resource",
                        "schema": {
                            "$ref": "#\/definitions\/PeeringContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PeeringContract resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PeeringContract"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PeeringContract"
                ],
                "operationId": "deletePeeringContractItem",
                "summary": "Removes the PeeringContract resource.",
                "responses": {
                    "204": {
                        "description": "PeeringContract resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pick_up_groups": {
            "get": {
                "tags": [
                    "PickUpGroup"
                ],
                "operationId": "getPickUpGroupCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PickUpGroup resources.",
                "responses": {
                    "200": {
                        "description": "PickUpGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PickUpGroup-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PickUpGroup"
                ],
                "operationId": "postPickUpGroupCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PickUpGroup resource.",
                "parameters": [
                    {
                        "name": "pickUpGroup",
                        "in": "body",
                        "description": "The new PickUpGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PickUpGroup resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pick_up_groups\/{id}": {
            "get": {
                "tags": [
                    "PickUpGroup"
                ],
                "operationId": "getPickUpGroupItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PickUpGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpGroup resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpGroup-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PickUpGroup"
                ],
                "operationId": "putPickUpGroupItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PickUpGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pickUpGroup",
                        "in": "body",
                        "description": "The updated PickUpGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpGroup resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PickUpGroup"
                ],
                "operationId": "deletePickUpGroupItem",
                "summary": "Removes the PickUpGroup resource.",
                "responses": {
                    "204": {
                        "description": "PickUpGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pick_up_rel_users": {
            "get": {
                "tags": [
                    "PickUpRelUser"
                ],
                "operationId": "getPickUpRelUserCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PickUpRelUser resources.",
                "responses": {
                    "200": {
                        "description": "PickUpRelUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PickUpRelUser-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PickUpRelUser"
                ],
                "operationId": "postPickUpRelUserCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PickUpRelUser resource.",
                "parameters": [
                    {
                        "name": "pickUpRelUser",
                        "in": "body",
                        "description": "The new PickUpRelUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpRelUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PickUpRelUser resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pick_up_rel_users\/{id}": {
            "get": {
                "tags": [
                    "PickUpRelUser"
                ],
                "operationId": "getPickUpRelUserItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PickUpRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpRelUser resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpRelUser-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PickUpRelUser"
                ],
                "operationId": "putPickUpRelUserItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PickUpRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pickUpRelUser",
                        "in": "body",
                        "description": "The updated PickUpRelUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpRelUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpRelUser resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PickUpRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PickUpRelUser"
                ],
                "operationId": "deletePickUpRelUserItem",
                "summary": "Removes the PickUpRelUser resource.",
                "responses": {
                    "204": {
                        "description": "PickUpRelUser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pike_trusteds": {
            "get": {
                "tags": [
                    "PikeTrusted"
                ],
                "operationId": "getPikeTrustedCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PikeTrusted resources.",
                "responses": {
                    "200": {
                        "description": "PikeTrusted collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PikeTrusted-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PikeTrusted"
                ],
                "operationId": "postPikeTrustedCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PikeTrusted resource.",
                "parameters": [
                    {
                        "name": "pikeTrusted",
                        "in": "body",
                        "description": "The new PikeTrusted resource",
                        "schema": {
                            "$ref": "#\/definitions\/PikeTrusted"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PikeTrusted resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PikeTrusted"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pike_trusteds\/{id}": {
            "get": {
                "tags": [
                    "PikeTrusted"
                ],
                "operationId": "getPikeTrustedItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PikeTrusted resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PikeTrusted resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PikeTrusted-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PikeTrusted"
                ],
                "operationId": "putPikeTrustedItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PikeTrusted resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pikeTrusted",
                        "in": "body",
                        "description": "The updated PikeTrusted resource",
                        "schema": {
                            "$ref": "#\/definitions\/PikeTrusted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PikeTrusted resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PikeTrusted"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PikeTrusted"
                ],
                "operationId": "deletePikeTrustedItem",
                "summary": "Removes the PikeTrusted resource.",
                "responses": {
                    "204": {
                        "description": "PikeTrusted resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pricing_plans": {
            "get": {
                "tags": [
                    "PricingPlan"
                ],
                "operationId": "getPricingPlanCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PricingPlan resources.",
                "responses": {
                    "200": {
                        "description": "PricingPlan collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PricingPlan-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PricingPlan"
                ],
                "operationId": "postPricingPlanCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PricingPlan resource.",
                "parameters": [
                    {
                        "name": "pricingPlan",
                        "in": "body",
                        "description": "The new PricingPlan resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PricingPlan resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlan"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pricing_plans\/{id}": {
            "get": {
                "tags": [
                    "PricingPlan"
                ],
                "operationId": "getPricingPlanItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PricingPlan resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlan resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlan-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PricingPlan"
                ],
                "operationId": "putPricingPlanItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PricingPlan resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pricingPlan",
                        "in": "body",
                        "description": "The updated PricingPlan resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlan resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlan"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PricingPlan"
                ],
                "operationId": "deletePricingPlanItem",
                "summary": "Removes the PricingPlan resource.",
                "responses": {
                    "204": {
                        "description": "PricingPlan resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pricing_plans_rel_companies": {
            "get": {
                "tags": [
                    "PricingPlansRelCompany"
                ],
                "operationId": "getPricingPlansRelCompanyCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PricingPlansRelCompany resources.",
                "responses": {
                    "200": {
                        "description": "PricingPlansRelCompany collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PricingPlansRelCompany-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PricingPlansRelCompany"
                ],
                "operationId": "postPricingPlansRelCompanyCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PricingPlansRelCompany resource.",
                "parameters": [
                    {
                        "name": "pricingPlansRelCompany",
                        "in": "body",
                        "description": "The new PricingPlansRelCompany resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelCompany"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PricingPlansRelCompany resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelCompany"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pricing_plans_rel_companies\/{id}": {
            "get": {
                "tags": [
                    "PricingPlansRelCompany"
                ],
                "operationId": "getPricingPlansRelCompanyItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PricingPlansRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlansRelCompany resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelCompany-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PricingPlansRelCompany"
                ],
                "operationId": "putPricingPlansRelCompanyItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PricingPlansRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pricingPlansRelCompany",
                        "in": "body",
                        "description": "The updated PricingPlansRelCompany resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlansRelCompany resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelCompany"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PricingPlansRelCompany"
                ],
                "operationId": "deletePricingPlansRelCompanyItem",
                "summary": "Removes the PricingPlansRelCompany resource.",
                "responses": {
                    "204": {
                        "description": "PricingPlansRelCompany resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/pricing_plans_rel_target_patterns": {
            "get": {
                "tags": [
                    "PricingPlansRelTargetPattern"
                ],
                "operationId": "getPricingPlansRelTargetPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of PricingPlansRelTargetPattern resources.",
                "responses": {
                    "200": {
                        "description": "PricingPlansRelTargetPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/PricingPlansRelTargetPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PricingPlansRelTargetPattern"
                ],
                "operationId": "postPricingPlansRelTargetPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a PricingPlansRelTargetPattern resource.",
                "parameters": [
                    {
                        "name": "pricingPlansRelTargetPattern",
                        "in": "body",
                        "description": "The new PricingPlansRelTargetPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelTargetPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PricingPlansRelTargetPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelTargetPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/pricing_plans_rel_target_patterns\/{id}": {
            "get": {
                "tags": [
                    "PricingPlansRelTargetPattern"
                ],
                "operationId": "getPricingPlansRelTargetPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a PricingPlansRelTargetPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlansRelTargetPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelTargetPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PricingPlansRelTargetPattern"
                ],
                "operationId": "putPricingPlansRelTargetPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the PricingPlansRelTargetPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pricingPlansRelTargetPattern",
                        "in": "body",
                        "description": "The updated PricingPlansRelTargetPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelTargetPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PricingPlansRelTargetPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/PricingPlansRelTargetPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PricingPlansRelTargetPattern"
                ],
                "operationId": "deletePricingPlansRelTargetPatternItem",
                "summary": "Removes the PricingPlansRelTargetPattern resource.",
                "responses": {
                    "204": {
                        "description": "PricingPlansRelTargetPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/proxy_trunks": {
            "get": {
                "tags": [
                    "ProxyTrunk"
                ],
                "operationId": "getProxyTrunkCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ProxyTrunk resources.",
                "responses": {
                    "200": {
                        "description": "ProxyTrunk collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ProxyTrunk-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProxyTrunk"
                ],
                "operationId": "postProxyTrunkCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "proxyTrunk",
                        "in": "body",
                        "description": "The new ProxyTrunk resource",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyTrunk"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ProxyTrunk resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyTrunk"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/proxy_trunks\/{id}": {
            "get": {
                "tags": [
                    "ProxyTrunk"
                ],
                "operationId": "getProxyTrunkItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunk resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyTrunk-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProxyTrunk"
                ],
                "operationId": "putProxyTrunkItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "proxyTrunk",
                        "in": "body",
                        "description": "The updated ProxyTrunk resource",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyTrunk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunk resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyTrunk"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProxyTrunk"
                ],
                "operationId": "deleteProxyTrunkItem",
                "summary": "Removes the ProxyTrunk resource.",
                "responses": {
                    "204": {
                        "description": "ProxyTrunk resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/proxy_users": {
            "get": {
                "tags": [
                    "ProxyUser"
                ],
                "operationId": "getProxyUserCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of ProxyUser resources.",
                "responses": {
                    "200": {
                        "description": "ProxyUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/ProxyUser-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProxyUser"
                ],
                "operationId": "postProxyUserCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a ProxyUser resource.",
                "parameters": [
                    {
                        "name": "proxyUser",
                        "in": "body",
                        "description": "The new ProxyUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ProxyUser resource created",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/proxy_users\/{id}": {
            "get": {
                "tags": [
                    "ProxyUser"
                ],
                "operationId": "getProxyUserItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a ProxyUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyUser resource response",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyUser-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProxyUser"
                ],
                "operationId": "putProxyUserItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the ProxyUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "proxyUser",
                        "in": "body",
                        "description": "The updated ProxyUser resource",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyUser resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/ProxyUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProxyUser"
                ],
                "operationId": "deleteProxyUserItem",
                "summary": "Removes the ProxyUser resource.",
                "responses": {
                    "204": {
                        "description": "ProxyUser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/queue_members": {
            "get": {
                "tags": [
                    "QueueMember"
                ],
                "operationId": "getQueueMemberCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of QueueMember resources.",
                "responses": {
                    "200": {
                        "description": "QueueMember collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/QueueMember-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "QueueMember"
                ],
                "operationId": "postQueueMemberCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a QueueMember resource.",
                "parameters": [
                    {
                        "name": "queueMember",
                        "in": "body",
                        "description": "The new QueueMember resource",
                        "schema": {
                            "$ref": "#\/definitions\/QueueMember"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "QueueMember resource created",
                        "schema": {
                            "$ref": "#\/definitions\/QueueMember"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/queue_members\/{id}": {
            "get": {
                "tags": [
                    "QueueMember"
                ],
                "operationId": "getQueueMemberItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a QueueMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QueueMember resource response",
                        "schema": {
                            "$ref": "#\/definitions\/QueueMember-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "QueueMember"
                ],
                "operationId": "putQueueMemberItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the QueueMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "queueMember",
                        "in": "body",
                        "description": "The updated QueueMember resource",
                        "schema": {
                            "$ref": "#\/definitions\/QueueMember"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QueueMember resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/QueueMember"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QueueMember"
                ],
                "operationId": "deleteQueueMemberItem",
                "summary": "Removes the QueueMember resource.",
                "responses": {
                    "204": {
                        "description": "QueueMember resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/queues": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "operationId": "getQueueCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Queue resources.",
                "responses": {
                    "200": {
                        "description": "Queue collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Queue-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Queue"
                ],
                "operationId": "postQueueCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Queue resource.",
                "parameters": [
                    {
                        "name": "queue",
                        "in": "body",
                        "description": "The new Queue resource",
                        "schema": {
                            "$ref": "#\/definitions\/Queue"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Queue resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Queue"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/queues\/{id}": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "operationId": "getQueueItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Queue resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Queue-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Queue"
                ],
                "operationId": "putQueueItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Queue resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "queue",
                        "in": "body",
                        "description": "The updated Queue resource",
                        "schema": {
                            "$ref": "#\/definitions\/Queue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Queue"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Queue"
                ],
                "operationId": "deleteQueueItem",
                "summary": "Removes the Queue resource.",
                "responses": {
                    "204": {
                        "description": "Queue resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/recordings": {
            "get": {
                "tags": [
                    "Recording"
                ],
                "operationId": "getRecordingCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Recording resources.",
                "responses": {
                    "200": {
                        "description": "Recording collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Recording-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recording"
                ],
                "operationId": "postRecordingCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Recording resource.",
                "parameters": [
                    {
                        "name": "recording",
                        "in": "body",
                        "description": "The new Recording resource",
                        "schema": {
                            "$ref": "#\/definitions\/Recording"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recording resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Recording"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/recordings\/{id}": {
            "get": {
                "tags": [
                    "Recording"
                ],
                "operationId": "getRecordingItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Recording resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recording resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Recording-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Recording"
                ],
                "operationId": "putRecordingItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Recording resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "recording",
                        "in": "body",
                        "description": "The updated Recording resource",
                        "schema": {
                            "$ref": "#\/definitions\/Recording"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recording resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Recording"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recording"
                ],
                "operationId": "deleteRecordingItem",
                "summary": "Removes the Recording resource.",
                "responses": {
                    "204": {
                        "description": "Recording resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/retail_accounts": {
            "get": {
                "tags": [
                    "RetailAccount"
                ],
                "operationId": "getRetailAccountCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of RetailAccount resources.",
                "responses": {
                    "200": {
                        "description": "RetailAccount collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/RetailAccount-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "RetailAccount"
                ],
                "operationId": "postRetailAccountCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a RetailAccount resource.",
                "parameters": [
                    {
                        "name": "retailAccount",
                        "in": "body",
                        "description": "The new RetailAccount resource",
                        "schema": {
                            "$ref": "#\/definitions\/RetailAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "RetailAccount resource created",
                        "schema": {
                            "$ref": "#\/definitions\/RetailAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/retail_accounts\/{id}": {
            "get": {
                "tags": [
                    "RetailAccount"
                ],
                "operationId": "getRetailAccountItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource response",
                        "schema": {
                            "$ref": "#\/definitions\/RetailAccount-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "RetailAccount"
                ],
                "operationId": "putRetailAccountItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "retailAccount",
                        "in": "body",
                        "description": "The updated RetailAccount resource",
                        "schema": {
                            "$ref": "#\/definitions\/RetailAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/RetailAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RetailAccount"
                ],
                "operationId": "deleteRetailAccountItem",
                "summary": "Removes the RetailAccount resource.",
                "responses": {
                    "204": {
                        "description": "RetailAccount resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/routing_pattern_groups": {
            "get": {
                "tags": [
                    "RoutingPatternGroup"
                ],
                "operationId": "getRoutingPatternGroupCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of RoutingPatternGroup resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/RoutingPatternGroup-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "RoutingPatternGroup"
                ],
                "operationId": "postRoutingPatternGroupCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a RoutingPatternGroup resource.",
                "parameters": [
                    {
                        "name": "routingPatternGroup",
                        "in": "body",
                        "description": "The new RoutingPatternGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "RoutingPatternGroup resource created",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/routing_pattern_groups\/{id}": {
            "get": {
                "tags": [
                    "RoutingPatternGroup"
                ],
                "operationId": "getRoutingPatternGroupItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a RoutingPatternGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup resource response",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroup-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "RoutingPatternGroup"
                ],
                "operationId": "putRoutingPatternGroupItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the RoutingPatternGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "routingPatternGroup",
                        "in": "body",
                        "description": "The updated RoutingPatternGroup resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RoutingPatternGroup"
                ],
                "operationId": "deleteRoutingPatternGroupItem",
                "summary": "Removes the RoutingPatternGroup resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPatternGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/routing_pattern_groups_rel_patterns": {
            "get": {
                "tags": [
                    "RoutingPatternGroupsRelPattern"
                ],
                "operationId": "getRoutingPatternGroupsRelPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of RoutingPatternGroupsRelPattern resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "RoutingPatternGroupsRelPattern"
                ],
                "operationId": "postRoutingPatternGroupsRelPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a RoutingPatternGroupsRelPattern resource.",
                "parameters": [
                    {
                        "name": "routingPatternGroupsRelPattern",
                        "in": "body",
                        "description": "The new RoutingPatternGroupsRelPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "RoutingPatternGroupsRelPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/routing_pattern_groups_rel_patterns\/{id}": {
            "get": {
                "tags": [
                    "RoutingPatternGroupsRelPattern"
                ],
                "operationId": "getRoutingPatternGroupsRelPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a RoutingPatternGroupsRelPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "RoutingPatternGroupsRelPattern"
                ],
                "operationId": "putRoutingPatternGroupsRelPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the RoutingPatternGroupsRelPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "routingPatternGroupsRelPattern",
                        "in": "body",
                        "description": "The updated RoutingPatternGroupsRelPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RoutingPatternGroupsRelPattern"
                ],
                "operationId": "deleteRoutingPatternGroupsRelPatternItem",
                "summary": "Removes the RoutingPatternGroupsRelPattern resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPatternGroupsRelPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/routing_patterns": {
            "get": {
                "tags": [
                    "RoutingPattern"
                ],
                "operationId": "getRoutingPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of RoutingPattern resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/RoutingPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "RoutingPattern"
                ],
                "operationId": "postRoutingPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a RoutingPattern resource.",
                "parameters": [
                    {
                        "name": "routingPattern",
                        "in": "body",
                        "description": "The new RoutingPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "RoutingPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/routing_patterns\/{id}": {
            "get": {
                "tags": [
                    "RoutingPattern"
                ],
                "operationId": "getRoutingPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a RoutingPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "RoutingPattern"
                ],
                "operationId": "putRoutingPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the RoutingPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "routingPattern",
                        "in": "body",
                        "description": "The updated RoutingPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/RoutingPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RoutingPattern"
                ],
                "operationId": "deleteRoutingPatternItem",
                "summary": "Removes the RoutingPattern resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/schedules": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "operationId": "getScheduleCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Schedule resources.",
                "responses": {
                    "200": {
                        "description": "Schedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Schedule-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedule"
                ],
                "operationId": "postScheduleCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Schedule resource.",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "body",
                        "description": "The new Schedule resource",
                        "schema": {
                            "$ref": "#\/definitions\/Schedule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Schedule resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Schedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/schedules\/{id}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "operationId": "getScheduleItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Schedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Schedule-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Schedule"
                ],
                "operationId": "putScheduleItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Schedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "schedule",
                        "in": "body",
                        "description": "The updated Schedule resource",
                        "schema": {
                            "$ref": "#\/definitions\/Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Schedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Schedule"
                ],
                "operationId": "deleteScheduleItem",
                "summary": "Removes the Schedule resource.",
                "responses": {
                    "204": {
                        "description": "Schedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/services": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "getServiceCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Service resources.",
                "responses": {
                    "200": {
                        "description": "Service collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Service-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "postServiceCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Service resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "body",
                        "description": "The new Service resource",
                        "schema": {
                            "$ref": "#\/definitions\/Service"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Service resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Service"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/services\/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "getServiceItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Service-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "operationId": "putServiceItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service",
                        "in": "body",
                        "description": "The updated Service resource",
                        "schema": {
                            "$ref": "#\/definitions\/Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Service"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "operationId": "deleteServiceItem",
                "summary": "Removes the Service resource.",
                "responses": {
                    "204": {
                        "description": "Service resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/target_patterns": {
            "get": {
                "tags": [
                    "TargetPattern"
                ],
                "operationId": "getTargetPatternCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of TargetPattern resources.",
                "responses": {
                    "200": {
                        "description": "TargetPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/TargetPattern-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TargetPattern"
                ],
                "operationId": "postTargetPatternCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a TargetPattern resource.",
                "parameters": [
                    {
                        "name": "targetPattern",
                        "in": "body",
                        "description": "The new TargetPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/TargetPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TargetPattern resource created",
                        "schema": {
                            "$ref": "#\/definitions\/TargetPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/target_patterns\/{id}": {
            "get": {
                "tags": [
                    "TargetPattern"
                ],
                "operationId": "getTargetPatternItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a TargetPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TargetPattern resource response",
                        "schema": {
                            "$ref": "#\/definitions\/TargetPattern-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "TargetPattern"
                ],
                "operationId": "putTargetPatternItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the TargetPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "targetPattern",
                        "in": "body",
                        "description": "The updated TargetPattern resource",
                        "schema": {
                            "$ref": "#\/definitions\/TargetPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TargetPattern resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/TargetPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TargetPattern"
                ],
                "operationId": "deleteTargetPatternItem",
                "summary": "Removes the TargetPattern resource.",
                "responses": {
                    "204": {
                        "description": "TargetPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/terminal_manufacturers": {
            "get": {
                "tags": [
                    "TerminalManufacturer"
                ],
                "operationId": "getTerminalManufacturerCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of TerminalManufacturer resources.",
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/TerminalManufacturer-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TerminalManufacturer"
                ],
                "operationId": "postTerminalManufacturerCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a TerminalManufacturer resource.",
                "parameters": [
                    {
                        "name": "terminalManufacturer",
                        "in": "body",
                        "description": "The new TerminalManufacturer resource",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalManufacturer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TerminalManufacturer resource created",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalManufacturer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/terminal_manufacturers\/{id}": {
            "get": {
                "tags": [
                    "TerminalManufacturer"
                ],
                "operationId": "getTerminalManufacturerItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a TerminalManufacturer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer resource response",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalManufacturer-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "TerminalManufacturer"
                ],
                "operationId": "putTerminalManufacturerItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the TerminalManufacturer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "terminalManufacturer",
                        "in": "body",
                        "description": "The updated TerminalManufacturer resource",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalManufacturer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalManufacturer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TerminalManufacturer"
                ],
                "operationId": "deleteTerminalManufacturerItem",
                "summary": "Removes the TerminalManufacturer resource.",
                "responses": {
                    "204": {
                        "description": "TerminalManufacturer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/terminal_models": {
            "get": {
                "tags": [
                    "TerminalModel"
                ],
                "operationId": "getTerminalModelCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of TerminalModel resources.",
                "responses": {
                    "200": {
                        "description": "TerminalModel collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/TerminalModel-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TerminalModel"
                ],
                "operationId": "postTerminalModelCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a TerminalModel resource.",
                "parameters": [
                    {
                        "name": "terminalModel",
                        "in": "body",
                        "description": "The new TerminalModel resource",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TerminalModel resource created",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalModel"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/terminal_models\/{id}": {
            "get": {
                "tags": [
                    "TerminalModel"
                ],
                "operationId": "getTerminalModelItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a TerminalModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalModel resource response",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalModel-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "TerminalModel"
                ],
                "operationId": "putTerminalModelItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the TerminalModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "terminalModel",
                        "in": "body",
                        "description": "The updated TerminalModel resource",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalModel resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/TerminalModel"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TerminalModel"
                ],
                "operationId": "deleteTerminalModelItem",
                "summary": "Removes the TerminalModel resource.",
                "responses": {
                    "204": {
                        "description": "TerminalModel resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/terminals": {
            "get": {
                "tags": [
                    "Terminal"
                ],
                "operationId": "getTerminalCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Terminal resources.",
                "responses": {
                    "200": {
                        "description": "Terminal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Terminal-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Terminal"
                ],
                "operationId": "postTerminalCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Terminal resource.",
                "parameters": [
                    {
                        "name": "terminal",
                        "in": "body",
                        "description": "The new Terminal resource",
                        "schema": {
                            "$ref": "#\/definitions\/Terminal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Terminal resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Terminal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/terminals\/{id}": {
            "get": {
                "tags": [
                    "Terminal"
                ],
                "operationId": "getTerminalItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Terminal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Terminal-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Terminal"
                ],
                "operationId": "putTerminalItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Terminal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "terminal",
                        "in": "body",
                        "description": "The updated Terminal resource",
                        "schema": {
                            "$ref": "#\/definitions\/Terminal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Terminal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Terminal"
                ],
                "operationId": "deleteTerminalItem",
                "summary": "Removes the Terminal resource.",
                "responses": {
                    "204": {
                        "description": "Terminal resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/timezones": {
            "get": {
                "tags": [
                    "Timezone"
                ],
                "operationId": "getTimezoneCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Timezone resources.",
                "responses": {
                    "200": {
                        "description": "Timezone collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Timezone-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Timezone"
                ],
                "operationId": "postTimezoneCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Timezone resource.",
                "parameters": [
                    {
                        "name": "timezone",
                        "in": "body",
                        "description": "The new Timezone resource",
                        "schema": {
                            "$ref": "#\/definitions\/Timezone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Timezone resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Timezone"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/timezones\/{id}": {
            "get": {
                "tags": [
                    "Timezone"
                ],
                "operationId": "getTimezoneItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Timezone resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Timezone-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Timezone"
                ],
                "operationId": "putTimezoneItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Timezone resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "timezone",
                        "in": "body",
                        "description": "The updated Timezone resource",
                        "schema": {
                            "$ref": "#\/definitions\/Timezone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Timezone"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Timezone"
                ],
                "operationId": "deleteTimezoneItem",
                "summary": "Removes the Timezone resource.",
                "responses": {
                    "204": {
                        "description": "Timezone resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/transformation_rule_sets": {
            "get": {
                "tags": [
                    "TransformationRuleSet"
                ],
                "operationId": "getTransformationRuleSetCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of TransformationRuleSet resources.",
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/TransformationRuleSet-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TransformationRuleSet"
                ],
                "operationId": "postTransformationRuleSetCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "transformationRuleSet",
                        "in": "body",
                        "description": "The new TransformationRuleSet resource",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRuleSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TransformationRuleSet resource created",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRuleSet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/transformation_rule_sets\/{id}": {
            "get": {
                "tags": [
                    "TransformationRuleSet"
                ],
                "operationId": "getTransformationRuleSetItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet resource response",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRuleSet-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "TransformationRuleSet"
                ],
                "operationId": "putTransformationRuleSetItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "body",
                        "description": "The updated TransformationRuleSet resource",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRuleSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRuleSet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransformationRuleSet"
                ],
                "operationId": "deleteTransformationRuleSetItem",
                "summary": "Removes the TransformationRuleSet resource.",
                "responses": {
                    "204": {
                        "description": "TransformationRuleSet resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/transformation_rules": {
            "get": {
                "tags": [
                    "TransformationRule"
                ],
                "operationId": "getTransformationRuleCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of TransformationRule resources.",
                "responses": {
                    "200": {
                        "description": "TransformationRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/TransformationRule-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TransformationRule"
                ],
                "operationId": "postTransformationRuleCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a TransformationRule resource.",
                "parameters": [
                    {
                        "name": "transformationRule",
                        "in": "body",
                        "description": "The new TransformationRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TransformationRule resource created",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/transformation_rules\/{id}": {
            "get": {
                "tags": [
                    "TransformationRule"
                ],
                "operationId": "getTransformationRuleItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a TransformationRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRule resource response",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRule-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "TransformationRule"
                ],
                "operationId": "putTransformationRuleItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the TransformationRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "transformationRule",
                        "in": "body",
                        "description": "The updated TransformationRule resource",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRule resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/TransformationRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransformationRule"
                ],
                "operationId": "deleteTransformationRuleItem",
                "summary": "Removes the TransformationRule resource.",
                "responses": {
                    "204": {
                        "description": "TransformationRule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUserCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of User resources.",
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/User-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "postUserCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a User resource.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The new User resource",
                        "schema": {
                            "$ref": "#\/definitions\/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "schema": {
                            "$ref": "#\/definitions\/User"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/users\/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUserItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource response",
                        "schema": {
                            "$ref": "#\/definitions\/User-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "operationId": "putUserItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The updated User resource",
                        "schema": {
                            "$ref": "#\/definitions\/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/User"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "operationId": "deleteUserItem",
                "summary": "Removes the User resource.",
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        }
    },
    "definitions": {
        "Administrator": {
            "type": "object",
            "description": "Administrator",
            "properties": {
                "username": {
                    "type": "string"
                },
                "pass": {
                    "description": "comment: password",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "timezone": {
                    "type": "integer"
                }
            }
        },
        "Administrator-Detailed": {
            "type": "object",
            "description": "Administrator",
            "properties": {
                "username": {
                    "type": "string"
                },
                "pass": {
                    "description": "comment: password",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "timezone": {
                    "$ref": "#\/definitions\/Timezone"
                }
            }
        },
        "Administrator-Simple": {
            "type": "object",
            "description": "Administrator",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ApplicationServer": {
            "type": "object",
            "description": "ApplicationServer",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ApplicationServer-Detailed": {
            "type": "object",
            "description": "ApplicationServer",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ApplicationServer-Simple": {
            "type": "object",
            "description": "ApplicationServer",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Brand": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "fromName": {
                    "type": "string"
                },
                "fromAddress": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#\/definitions\/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Brand_Invoice"
                },
                "domain": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "defaultTimezone": {
                    "type": "integer"
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "relFeatures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "retailAccounts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "musicsOnHold": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Brand-Detailed": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "fromName": {
                    "type": "string"
                },
                "fromAddress": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#\/definitions\/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Brand_Invoice"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "defaultTimezone": {
                    "$ref": "#\/definitions\/Timezone"
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Company"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/BrandService"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/BrandUrl"
                    }
                },
                "relFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FeaturesRelBrand"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Domain"
                    }
                },
                "retailAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/RetailAccount"
                    }
                },
                "musicsOnHold": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MusicOnHold"
                    }
                },
                "matchLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MatchList"
                    }
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/OutgoingRouting"
                    }
                }
            }
        },
        "Brand-Simple": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "logo": {
                    "type": "integer"
                },
                "invoice": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "relFeatures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "BrandService": {
            "type": "object",
            "description": "BrandService",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "service": {
                    "type": "integer"
                }
            }
        },
        "BrandService-Detailed": {
            "type": "object",
            "description": "BrandService",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "service": {
                    "$ref": "#\/definitions\/Service"
                }
            }
        },
        "BrandService-Simple": {
            "type": "object",
            "description": "BrandService",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "BrandUrl": {
            "type": "object",
            "description": "BrandUrl",
            "properties": {
                "url": {
                    "type": "string"
                },
                "klearTheme": {
                    "type": "string"
                },
                "urlType": {
                    "description": "comment: enum:god|brand|admin|user",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userTheme": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "BrandUrl-Detailed": {
            "type": "object",
            "description": "BrandUrl",
            "properties": {
                "url": {
                    "type": "string"
                },
                "klearTheme": {
                    "type": "string"
                },
                "urlType": {
                    "description": "comment: enum:god|brand|admin|user",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userTheme": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "BrandUrl-Simple": {
            "type": "object",
            "description": "BrandUrl",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Brand_Invoice": {
            "type": "object",
            "description": "Invoice",
            "properties": {
                "nif": {
                    "type": "string"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "registryData": {
                    "type": "string"
                }
            }
        },
        "Brand_Logo": {
            "type": "object",
            "description": "Logo",
            "properties": {
                "fileSize": {
                    "description": "column: logoFileSize\ncomment: FSO",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "column: logoMimeType",
                    "type": "string"
                },
                "baseName": {
                    "description": "column: logoBaseName",
                    "type": "string"
                }
            }
        },
        "Calendar": {
            "type": "object",
            "description": "Calendar",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "holidayDates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Calendar-Detailed": {
            "type": "object",
            "description": "Calendar",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "holidayDates": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HolidayDate"
                    }
                }
            }
        },
        "Calendar-Simple": {
            "type": "object",
            "description": "Calendar",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "CallAcl": {
            "type": "object",
            "description": "CallAcl",
            "properties": {
                "name": {
                    "type": "string"
                },
                "defaultPolicy": {
                    "description": "comment: enum:allow|deny",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "relMatchLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "CallAcl-Detailed": {
            "type": "object",
            "description": "CallAcl",
            "properties": {
                "name": {
                    "type": "string"
                },
                "defaultPolicy": {
                    "description": "comment: enum:allow|deny",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "relMatchLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/CallAclRelMatchList"
                    }
                }
            }
        },
        "CallAcl-Simple": {
            "type": "object",
            "description": "CallAcl",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "CallAclRelMatchList": {
            "type": "object",
            "description": "CallAclRelPattern",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "policy": {
                    "description": "comment: enum:allow|deny",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "callAcl": {
                    "type": "integer"
                },
                "matchList": {
                    "type": "integer"
                }
            }
        },
        "CallAclRelMatchList-Detailed": {
            "type": "object",
            "description": "CallAclRelPattern",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "policy": {
                    "description": "comment: enum:allow|deny",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "callAcl": {
                    "$ref": "#\/definitions\/CallAcl"
                },
                "matchList": {
                    "$ref": "#\/definitions\/MatchList"
                }
            }
        },
        "CallAclRelMatchList-Simple": {
            "type": "object",
            "description": "CallAclRelPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "CallForwardSetting": {
            "type": "object",
            "description": "CallForwardSetting",
            "properties": {
                "callTypeFilter": {
                    "description": "comment: enum:internal|external|both",
                    "type": "string"
                },
                "callForwardType": {
                    "description": "comment: enum:inconditional|noAnswer|busy|userNotRegistered",
                    "type": "string"
                },
                "targetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "noAnswerTimeout": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "extension": {
                    "type": "integer"
                },
                "voiceMailUser": {
                    "type": "integer"
                },
                "numberCountry": {
                    "type": "integer"
                }
            }
        },
        "CallForwardSetting-Detailed": {
            "type": "object",
            "description": "CallForwardSetting",
            "properties": {
                "callTypeFilter": {
                    "description": "comment: enum:internal|external|both",
                    "type": "string"
                },
                "callForwardType": {
                    "description": "comment: enum:inconditional|noAnswer|busy|userNotRegistered",
                    "type": "string"
                },
                "targetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "noAnswerTimeout": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                },
                "extension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "numberCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "CallForwardSetting-Simple": {
            "type": "object",
            "description": "CallForwardSetting",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Company": {
            "type": "object",
            "description": "Company",
            "properties": {
                "type": {
                    "description": "comment: enum:vpbx|retail",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "nif": {
                    "type": "string"
                },
                "distributeMethod": {
                    "description": "comment: enum:static|rr|hash",
                    "type": "string"
                },
                "externalMaxCalls": {
                    "type": "integer"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "countryName": {
                    "description": "column: country",
                    "type": "string"
                },
                "ipfilter": {
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "type": "integer"
                },
                "onDemandRecordCode": {
                    "type": "string"
                },
                "externallyextraopts": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "mediaRelaySets": {
                    "type": "integer"
                },
                "defaultTimezone": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "applicationServer": {
                    "type": "integer"
                },
                "country": {
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                },
                "outgoingDdi": {
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "type": "integer"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ddis": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "companyServices": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "terminals": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "relPricingPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "musicsOnHold": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "recordings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "relFeatures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Company-Detailed": {
            "type": "object",
            "description": "Company",
            "properties": {
                "type": {
                    "description": "comment: enum:vpbx|retail",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "nif": {
                    "type": "string"
                },
                "distributeMethod": {
                    "description": "comment: enum:static|rr|hash",
                    "type": "string"
                },
                "externalMaxCalls": {
                    "type": "integer"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "countryName": {
                    "description": "column: country",
                    "type": "string"
                },
                "ipfilter": {
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "type": "integer"
                },
                "onDemandRecordCode": {
                    "type": "string"
                },
                "externallyextraopts": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "mediaRelaySets": {
                    "$ref": "#\/definitions\/MediaRelaySet"
                },
                "defaultTimezone": {
                    "$ref": "#\/definitions\/Timezone"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "applicationServer": {
                    "$ref": "#\/definitions\/ApplicationServer"
                },
                "country": {
                    "$ref": "#\/definitions\/Country"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#\/definitions\/Ddi"
                },
                "outgoingDdiRule": {
                    "$ref": "#\/definitions\/OutgoingDdiRule"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Extension"
                    }
                },
                "ddis": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Ddi"
                    }
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Friend"
                    }
                },
                "companyServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/CompanyService"
                    }
                },
                "terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Terminal"
                    }
                },
                "relPricingPlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PricingPlansRelCompany"
                    }
                },
                "musicsOnHold": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MusicOnHold"
                    }
                },
                "recordings": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Recording"
                    }
                },
                "relFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FeaturesRelCompany"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Domain"
                    }
                }
            }
        },
        "Company-Simple": {
            "type": "object",
            "description": "Company",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "CompanyService": {
            "type": "object",
            "description": "CompanyService",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "service": {
                    "type": "integer"
                }
            }
        },
        "CompanyService-Detailed": {
            "type": "object",
            "description": "CompanyService",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "service": {
                    "$ref": "#\/definitions\/Service"
                }
            }
        },
        "CompanyService-Simple": {
            "type": "object",
            "description": "CompanyService",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ConditionalRoute": {
            "type": "object",
            "description": "ConditionalRoute",
            "properties": {
                "name": {
                    "type": "string"
                },
                "routetype": {
                    "description": "comment: enum:user|number|ivr|huntGroup|voicemail|friend|queue|conferenceRoom|extension",
                    "type": "string"
                },
                "numbervalue": {
                    "type": "string"
                },
                "friendvalue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "ivr": {
                    "type": "integer"
                },
                "huntGroup": {
                    "type": "integer"
                },
                "voicemailUser": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "queue": {
                    "type": "integer"
                },
                "locution": {
                    "type": "integer"
                },
                "conferenceRoom": {
                    "type": "integer"
                },
                "extension": {
                    "type": "integer"
                },
                "numberCountry": {
                    "type": "integer"
                }
            }
        },
        "ConditionalRoute-Detailed": {
            "type": "object",
            "description": "ConditionalRoute",
            "properties": {
                "name": {
                    "type": "string"
                },
                "routetype": {
                    "description": "comment: enum:user|number|ivr|huntGroup|voicemail|friend|queue|conferenceRoom|extension",
                    "type": "string"
                },
                "numbervalue": {
                    "type": "string"
                },
                "friendvalue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "ivr": {
                    "$ref": "#\/definitions\/Ivr"
                },
                "huntGroup": {
                    "$ref": "#\/definitions\/HuntGroup"
                },
                "voicemailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                },
                "queue": {
                    "$ref": "#\/definitions\/Queue"
                },
                "locution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "conferenceRoom": {
                    "$ref": "#\/definitions\/ConferenceRoom"
                },
                "extension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "numberCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "ConditionalRoute-Simple": {
            "type": "object",
            "description": "ConditionalRoute",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ConferenceRoom": {
            "type": "object",
            "description": "ConferenceRoom",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pinProtected": {
                    "type": "boolean"
                },
                "pinCode": {
                    "type": "string"
                },
                "maxMembers": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "ConferenceRoom-Detailed": {
            "type": "object",
            "description": "ConferenceRoom",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pinProtected": {
                    "type": "boolean"
                },
                "pinCode": {
                    "type": "string"
                },
                "maxMembers": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "ConferenceRoom-Simple": {
            "type": "object",
            "description": "ConferenceRoom",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Country": {
            "type": "object",
            "description": "Country",
            "properties": {
                "code": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "Country-Detailed": {
            "type": "object",
            "description": "Country",
            "properties": {
                "code": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "Country-Simple": {
            "type": "object",
            "description": "Country",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Ddi": {
            "type": "object",
            "description": "Ddi",
            "properties": {
                "ddi": {
                    "type": "string"
                },
                "ddie164": {
                    "type": "string"
                },
                "recordCalls": {
                    "description": "comment: enum:none|all|inbound|outbound",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:user|ivr|huntGroup|fax|conferenceRoom|friend|queue|retailAccount|conditional",
                    "type": "string"
                },
                "billInboundCalls": {
                    "type": "boolean"
                },
                "friendValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "conferenceRoom": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "queue": {
                    "type": "integer"
                },
                "externalCallFilter": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "ivr": {
                    "type": "integer"
                },
                "huntGroup": {
                    "type": "integer"
                },
                "fax": {
                    "type": "integer"
                },
                "peeringContract": {
                    "type": "integer"
                },
                "country": {
                    "type": "integer"
                },
                "retailAccount": {
                    "type": "integer"
                },
                "conditionalRoute": {
                    "type": "integer"
                }
            }
        },
        "Ddi-Detailed": {
            "type": "object",
            "description": "Ddi",
            "properties": {
                "ddi": {
                    "type": "string"
                },
                "ddie164": {
                    "type": "string"
                },
                "recordCalls": {
                    "description": "comment: enum:none|all|inbound|outbound",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:user|ivr|huntGroup|fax|conferenceRoom|friend|queue|retailAccount|conditional",
                    "type": "string"
                },
                "billInboundCalls": {
                    "type": "boolean"
                },
                "friendValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "conferenceRoom": {
                    "$ref": "#\/definitions\/ConferenceRoom"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "queue": {
                    "$ref": "#\/definitions\/Queue"
                },
                "externalCallFilter": {
                    "$ref": "#\/definitions\/ExternalCallFilter"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                },
                "ivr": {
                    "$ref": "#\/definitions\/Ivr"
                },
                "huntGroup": {
                    "$ref": "#\/definitions\/HuntGroup"
                },
                "fax": {
                    "$ref": "#\/definitions\/Fax"
                },
                "peeringContract": {
                    "$ref": "#\/definitions\/PeeringContract"
                },
                "country": {
                    "$ref": "#\/definitions\/Country"
                },
                "retailAccount": {
                    "$ref": "#\/definitions\/RetailAccount"
                },
                "conditionalRoute": {
                    "$ref": "#\/definitions\/ConditionalRoute"
                }
            }
        },
        "Ddi-Simple": {
            "type": "object",
            "description": "Ddi",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Domain": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "pointsTo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "retailAccounts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "terminals": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Domain-Detailed": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "pointsTo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Friend"
                    }
                },
                "retailAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/RetailAccount"
                    }
                },
                "terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Terminal"
                    }
                }
            }
        },
        "Domain-Simple": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Extension": {
            "type": "object",
            "description": "Extension",
            "properties": {
                "number": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:user|number|ivr|huntGroup|conferenceRoom|friend|queue|retailAccount|conditional",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "friendValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "ivr": {
                    "type": "integer"
                },
                "huntGroup": {
                    "type": "integer"
                },
                "conferenceRoom": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "queue": {
                    "type": "integer"
                },
                "conditionalRoute": {
                    "type": "integer"
                },
                "numberCountry": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Extension-Detailed": {
            "type": "object",
            "description": "Extension",
            "properties": {
                "number": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:user|number|ivr|huntGroup|conferenceRoom|friend|queue|retailAccount|conditional",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "friendValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "ivr": {
                    "$ref": "#\/definitions\/Ivr"
                },
                "huntGroup": {
                    "$ref": "#\/definitions\/HuntGroup"
                },
                "conferenceRoom": {
                    "$ref": "#\/definitions\/ConferenceRoom"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                },
                "queue": {
                    "$ref": "#\/definitions\/Queue"
                },
                "conditionalRoute": {
                    "$ref": "#\/definitions\/ConditionalRoute"
                },
                "numberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                }
            }
        },
        "Extension-Simple": {
            "type": "object",
            "description": "Extension",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilter": {
            "type": "object",
            "description": "ExternalCallFilter",
            "properties": {
                "name": {
                    "type": "string"
                },
                "holidayTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "holidayNumberValue": {
                    "type": "string"
                },
                "outOfScheduleTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "outOfScheduleNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "welcomeLocution": {
                    "type": "integer"
                },
                "holidayLocution": {
                    "type": "integer"
                },
                "outOfScheduleLocution": {
                    "type": "integer"
                },
                "holidayExtension": {
                    "type": "integer"
                },
                "outOfScheduleExtension": {
                    "type": "integer"
                },
                "holidayVoiceMailUser": {
                    "type": "integer"
                },
                "outOfScheduleVoiceMailUser": {
                    "type": "integer"
                },
                "holidayNumberCountry": {
                    "type": "integer"
                },
                "outOfScheduleNumberCountry": {
                    "type": "integer"
                },
                "calendars": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "blackLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "whiteLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ExternalCallFilter-Detailed": {
            "type": "object",
            "description": "ExternalCallFilter",
            "properties": {
                "name": {
                    "type": "string"
                },
                "holidayTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "holidayNumberValue": {
                    "type": "string"
                },
                "outOfScheduleTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "outOfScheduleNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "welcomeLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "holidayLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "outOfScheduleLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "holidayExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "outOfScheduleExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "holidayVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "outOfScheduleVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "holidayNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "outOfScheduleNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "calendars": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ExternalCallFilterRelCalendar"
                    }
                },
                "blackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ExternalCallFilterBlackList"
                    }
                },
                "whiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ExternalCallFilterWhiteList"
                    }
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ExternalCallFilterRelSchedule"
                    }
                }
            }
        },
        "ExternalCallFilter-Simple": {
            "type": "object",
            "description": "ExternalCallFilter",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterBlackList": {
            "type": "object",
            "description": "ExternalCallFilterBlackList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "type": "integer"
                },
                "matchlist": {
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterBlackList-Detailed": {
            "type": "object",
            "description": "ExternalCallFilterBlackList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#\/definitions\/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#\/definitions\/MatchList"
                }
            }
        },
        "ExternalCallFilterBlackList-Simple": {
            "type": "object",
            "description": "ExternalCallFilterBlackList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterRelCalendar": {
            "type": "object",
            "description": "ExternalCallFilterRelCalendar",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "type": "integer"
                },
                "calendar": {
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterRelCalendar-Detailed": {
            "type": "object",
            "description": "ExternalCallFilterRelCalendar",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#\/definitions\/ExternalCallFilter"
                },
                "calendar": {
                    "$ref": "#\/definitions\/Calendar"
                }
            }
        },
        "ExternalCallFilterRelCalendar-Simple": {
            "type": "object",
            "description": "ExternalCallFilterRelCalendar",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterRelSchedule": {
            "type": "object",
            "description": "ExternalCallFilterRelSchedule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "type": "integer"
                },
                "schedule": {
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterRelSchedule-Detailed": {
            "type": "object",
            "description": "ExternalCallFilterRelSchedule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#\/definitions\/ExternalCallFilter"
                },
                "schedule": {
                    "$ref": "#\/definitions\/Schedule"
                }
            }
        },
        "ExternalCallFilterRelSchedule-Simple": {
            "type": "object",
            "description": "ExternalCallFilterRelSchedule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterWhiteList": {
            "type": "object",
            "description": "ExternalCallFilterWhiteList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "type": "integer"
                },
                "matchlist": {
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilterWhiteList-Detailed": {
            "type": "object",
            "description": "ExternalCallFilterWhiteList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#\/definitions\/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#\/definitions\/MatchList"
                }
            }
        },
        "ExternalCallFilterWhiteList-Simple": {
            "type": "object",
            "description": "ExternalCallFilterWhiteList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Fax": {
            "type": "object",
            "description": "Fax",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sendByEmail": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "outgoingDdi": {
                    "type": "integer"
                }
            }
        },
        "Fax-Detailed": {
            "type": "object",
            "description": "Fax",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sendByEmail": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "outgoingDdi": {
                    "$ref": "#\/definitions\/Ddi"
                }
            }
        },
        "Fax-Simple": {
            "type": "object",
            "description": "Fax",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FaxesInOut": {
            "type": "object",
            "description": "FaxesInOut",
            "properties": {
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "src": {
                    "type": "string"
                },
                "dst": {
                    "type": "string"
                },
                "type": {
                    "description": "comment: enum:In|Out",
                    "type": "string"
                },
                "pages": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                },
                "fax": {
                    "type": "integer"
                },
                "dstCountry": {
                    "type": "integer"
                }
            }
        },
        "FaxesInOut-Detailed": {
            "type": "object",
            "description": "FaxesInOut",
            "properties": {
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "src": {
                    "type": "string"
                },
                "dst": {
                    "type": "string"
                },
                "type": {
                    "description": "comment: enum:In|Out",
                    "type": "string"
                },
                "pages": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                },
                "fax": {
                    "$ref": "#\/definitions\/Fax"
                },
                "dstCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "FaxesInOut-Simple": {
            "type": "object",
            "description": "FaxesInOut",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Feature": {
            "type": "object",
            "description": "Feature",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Feature-Detailed": {
            "type": "object",
            "description": "Feature",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Feature-Simple": {
            "type": "object",
            "description": "Feature",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FeaturesRelBrand": {
            "type": "object",
            "description": "FeaturesRelBrand",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "feature": {
                    "type": "integer"
                }
            }
        },
        "FeaturesRelBrand-Detailed": {
            "type": "object",
            "description": "FeaturesRelBrand",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "feature": {
                    "$ref": "#\/definitions\/Feature"
                }
            }
        },
        "FeaturesRelBrand-Simple": {
            "type": "object",
            "description": "FeaturesRelBrand",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany": {
            "type": "object",
            "description": "FeaturesRelCompany",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "feature": {
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany-Detailed": {
            "type": "object",
            "description": "FeaturesRelCompany",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "feature": {
                    "$ref": "#\/definitions\/Feature"
                }
            }
        },
        "FeaturesRelCompany-Simple": {
            "type": "object",
            "description": "FeaturesRelCompany",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FixedCost": {
            "type": "object",
            "description": "FixedCost",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "cost": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "FixedCost-Detailed": {
            "type": "object",
            "description": "FixedCost",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "cost": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "FixedCost-Simple": {
            "type": "object",
            "description": "FixedCost",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FixedCostsRelInvoice": {
            "type": "object",
            "description": "FixedCostsRelInvoice",
            "properties": {
                "quantity": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "fixedCost": {
                    "type": "integer"
                },
                "invoice": {
                    "type": "integer"
                }
            }
        },
        "FixedCostsRelInvoice-Detailed": {
            "type": "object",
            "description": "FixedCostsRelInvoice",
            "properties": {
                "quantity": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "fixedCost": {
                    "$ref": "#\/definitions\/FixedCost"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Invoice"
                }
            }
        },
        "FixedCostsRelInvoice-Simple": {
            "type": "object",
            "description": "FixedCostsRelInvoice",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Friend": {
            "type": "object",
            "description": "Friend",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transport": {
                    "description": "comment: enum:udp|tcp|tls",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "disallow": {
                    "type": "string"
                },
                "allow": {
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:invite|update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "description": "column: callerid_update_header\ncomment: enum:pai|rpid",
                    "type": "string"
                },
                "updateCallerid": {
                    "description": "column: update_callerid\ncomment: enum:yes|no",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "description": "comment: enum:yes|no",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                },
                "callAcl": {
                    "type": "integer"
                },
                "outgoingDdi": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "psEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Friend-Detailed": {
            "type": "object",
            "description": "Friend",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transport": {
                    "description": "comment: enum:udp|tcp|tls",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "disallow": {
                    "type": "string"
                },
                "allow": {
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:invite|update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "description": "column: callerid_update_header\ncomment: enum:pai|rpid",
                    "type": "string"
                },
                "updateCallerid": {
                    "description": "column: update_callerid\ncomment: enum:yes|no",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "description": "comment: enum:yes|no",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                },
                "callAcl": {
                    "$ref": "#\/definitions\/CallAcl"
                },
                "outgoingDdi": {
                    "$ref": "#\/definitions\/Ddi"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "psEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FriendsPattern"
                    }
                }
            }
        },
        "Friend-Simple": {
            "type": "object",
            "description": "Friend",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "FriendsPattern": {
            "type": "object",
            "description": "FriendsPattern",
            "properties": {
                "name": {
                    "type": "string"
                },
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "friend": {
                    "type": "integer"
                }
            }
        },
        "FriendsPattern-Detailed": {
            "type": "object",
            "description": "FriendsPattern",
            "properties": {
                "name": {
                    "type": "string"
                },
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "friend": {
                    "$ref": "#\/definitions\/Friend"
                }
            }
        },
        "FriendsPattern-Simple": {
            "type": "object",
            "description": "FriendsPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "HolidayDate": {
            "type": "object",
            "description": "HolidayDate",
            "properties": {
                "name": {
                    "type": "string"
                },
                "eventDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "calendar": {
                    "type": "integer"
                },
                "locution": {
                    "type": "integer"
                }
            }
        },
        "HolidayDate-Detailed": {
            "type": "object",
            "description": "HolidayDate",
            "properties": {
                "name": {
                    "type": "string"
                },
                "eventDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "calendar": {
                    "$ref": "#\/definitions\/Calendar"
                },
                "locution": {
                    "$ref": "#\/definitions\/Locution"
                }
            }
        },
        "HolidayDate-Simple": {
            "type": "object",
            "description": "HolidayDate",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "HuntGroup": {
            "type": "object",
            "description": "HuntGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "strategy": {
                    "description": "comment: enum:ringAll|linear|roundRobin|random",
                    "type": "string"
                },
                "ringAllTimeout": {
                    "type": "integer"
                },
                "nextUserPosition": {
                    "type": "integer"
                },
                "noAnswerTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "noAnswerNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "noAnswerLocution": {
                    "type": "integer"
                },
                "noAnswerExtension": {
                    "type": "integer"
                },
                "noAnswerVoiceMailUser": {
                    "type": "integer"
                },
                "huntGroupsRelUsers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "HuntGroup-Detailed": {
            "type": "object",
            "description": "HuntGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "strategy": {
                    "description": "comment: enum:ringAll|linear|roundRobin|random",
                    "type": "string"
                },
                "ringAllTimeout": {
                    "type": "integer"
                },
                "nextUserPosition": {
                    "type": "integer"
                },
                "noAnswerTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "noAnswerNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "noAnswerLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "noAnswerExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "noAnswerVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "huntGroupsRelUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HuntGroupsRelUser"
                    }
                }
            }
        },
        "HuntGroup-Simple": {
            "type": "object",
            "description": "HuntGroup",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "HuntGroupsRelUser": {
            "type": "object",
            "description": "HuntGroupsRelUser",
            "properties": {
                "timeoutTime": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "huntGroup": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "HuntGroupsRelUser-Detailed": {
            "type": "object",
            "description": "HuntGroupsRelUser",
            "properties": {
                "timeoutTime": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "huntGroup": {
                    "$ref": "#\/definitions\/HuntGroup"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "HuntGroupsRelUser-Simple": {
            "type": "object",
            "description": "HuntGroupsRelUser",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "description": "Invoice",
            "properties": {
                "number": {
                    "type": "string"
                },
                "inDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "outDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "total": {
                    "type": "string"
                },
                "taxRate": {
                    "type": "string"
                },
                "totalWithTax": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:waiting|processing|created|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pdf": {
                    "type": "string"
                },
                "invoiceTemplate": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "Invoice-Detailed": {
            "type": "object",
            "description": "Invoice",
            "properties": {
                "number": {
                    "type": "string"
                },
                "inDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "outDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "total": {
                    "type": "string"
                },
                "taxRate": {
                    "type": "string"
                },
                "totalWithTax": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:waiting|processing|created|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pdf": {
                    "type": "string"
                },
                "invoiceTemplate": {
                    "$ref": "#\/definitions\/InvoiceTemplate"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "Invoice-Simple": {
            "type": "object",
            "description": "Invoice",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "InvoiceTemplate": {
            "type": "object",
            "description": "InvoiceTemplate",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "templateHeader": {
                    "type": "string"
                },
                "templateFooter": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "InvoiceTemplate-Detailed": {
            "type": "object",
            "description": "InvoiceTemplate",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "templateHeader": {
                    "type": "string"
                },
                "templateFooter": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "InvoiceTemplate-Simple": {
            "type": "object",
            "description": "InvoiceTemplate",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Ivr": {
            "type": "object",
            "description": "Ivr",
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "maxDigits": {
                    "type": "integer"
                },
                "allowExtensions": {
                    "type": "boolean"
                },
                "noInputRouteType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "noInputNumberValue": {
                    "type": "string"
                },
                "errorRouteType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "errorNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "welcomeLocution": {
                    "type": "integer"
                },
                "noInputLocution": {
                    "type": "integer"
                },
                "errorLocution": {
                    "type": "integer"
                },
                "successLocution": {
                    "type": "integer"
                },
                "noInputExtension": {
                    "type": "integer"
                },
                "errorExtension": {
                    "type": "integer"
                },
                "noInputVoiceMailUser": {
                    "type": "integer"
                },
                "errorVoiceMailUser": {
                    "type": "integer"
                },
                "noInputNumberCountry": {
                    "type": "integer"
                },
                "errorNumberCountry": {
                    "type": "integer"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "excludedExtensions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Ivr-Detailed": {
            "type": "object",
            "description": "Ivr",
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "maxDigits": {
                    "type": "integer"
                },
                "allowExtensions": {
                    "type": "boolean"
                },
                "noInputRouteType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "noInputNumberValue": {
                    "type": "string"
                },
                "errorRouteType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "errorNumberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "welcomeLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "noInputLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "errorLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "successLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "noInputExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "errorExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "noInputVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "errorVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "noInputNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "errorNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/IvrEntry"
                    }
                },
                "excludedExtensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/IvrExcludedExtension"
                    }
                }
            }
        },
        "Ivr-Simple": {
            "type": "object",
            "description": "Ivr",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "IvrEntry": {
            "type": "object",
            "description": "IvrEntry",
            "properties": {
                "entry": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:number|extension|voicemail|conditional",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "ivr": {
                    "type": "integer"
                },
                "welcomeLocution": {
                    "type": "integer"
                },
                "extension": {
                    "type": "integer"
                },
                "voiceMailUser": {
                    "type": "integer"
                },
                "conditionalRoute": {
                    "type": "integer"
                },
                "numberCountry": {
                    "type": "integer"
                }
            }
        },
        "IvrEntry-Detailed": {
            "type": "object",
            "description": "IvrEntry",
            "properties": {
                "entry": {
                    "type": "string"
                },
                "routeType": {
                    "description": "comment: enum:number|extension|voicemail|conditional",
                    "type": "string"
                },
                "numberValue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "ivr": {
                    "$ref": "#\/definitions\/Ivr"
                },
                "welcomeLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "extension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "conditionalRoute": {
                    "$ref": "#\/definitions\/ConditionalRoute"
                },
                "numberCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "IvrEntry-Simple": {
            "type": "object",
            "description": "IvrEntry",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "IvrExcludedExtension": {
            "type": "object",
            "description": "IvrExcludedExtension",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "ivr": {
                    "type": "integer"
                },
                "extension": {
                    "type": "integer"
                }
            }
        },
        "IvrExcludedExtension-Detailed": {
            "type": "object",
            "description": "IvrExcludedExtension",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "ivr": {
                    "$ref": "#\/definitions\/Ivr"
                },
                "extension": {
                    "$ref": "#\/definitions\/Extension"
                }
            }
        },
        "IvrExcludedExtension-Simple": {
            "type": "object",
            "description": "IvrExcludedExtension",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Language": {
            "type": "object",
            "description": "Language",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "$ref": "#\/definitions\/Language_Name"
                }
            }
        },
        "Language-Detailed": {
            "type": "object",
            "description": "Language",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "$ref": "#\/definitions\/Language_Name"
                }
            }
        },
        "Language-Simple": {
            "type": "object",
            "description": "Language",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Language_Name": {
            "type": "object",
            "description": "Name",
            "properties": {
                "en": {
                    "description": "column: name_en",
                    "type": "string"
                },
                "es": {
                    "description": "column: name_es",
                    "type": "string"
                }
            }
        },
        "LcrGateway": {
            "type": "object",
            "description": "LcrGateway",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "gwName": {
                    "description": "column: gw_name",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "uriScheme": {
                    "description": "column: uri_scheme",
                    "type": "boolean"
                },
                "transport": {
                    "type": "boolean"
                },
                "strip": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "flags": {
                    "type": "integer"
                },
                "defunct": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "peerServer": {
                    "type": "integer"
                }
            }
        },
        "LcrGateway-Detailed": {
            "type": "object",
            "description": "LcrGateway",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "gwName": {
                    "description": "column: gw_name",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "uriScheme": {
                    "description": "column: uri_scheme",
                    "type": "boolean"
                },
                "transport": {
                    "type": "boolean"
                },
                "strip": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "flags": {
                    "type": "integer"
                },
                "defunct": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "peerServer": {
                    "$ref": "#\/definitions\/PeerServer"
                }
            }
        },
        "LcrGateway-Simple": {
            "type": "object",
            "description": "LcrGateway",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "LcrRule": {
            "type": "object",
            "description": "LcrRule",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "fromUri": {
                    "description": "column: from_uri",
                    "type": "string"
                },
                "requestUri": {
                    "description": "column: request_uri",
                    "type": "string"
                },
                "stopper": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "routingPattern": {
                    "type": "integer"
                },
                "outgoingRouting": {
                    "type": "integer"
                }
            }
        },
        "LcrRule-Detailed": {
            "type": "object",
            "description": "LcrRule",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "fromUri": {
                    "description": "column: from_uri",
                    "type": "string"
                },
                "requestUri": {
                    "description": "column: request_uri",
                    "type": "string"
                },
                "stopper": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "routingPattern": {
                    "$ref": "#\/definitions\/RoutingPattern"
                },
                "outgoingRouting": {
                    "$ref": "#\/definitions\/OutgoingRouting"
                }
            }
        },
        "LcrRule-Simple": {
            "type": "object",
            "description": "LcrRule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "LcrRuleTarget": {
            "type": "object",
            "description": "LcrRuleTarget",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "rule": {
                    "type": "integer"
                },
                "gw": {
                    "type": "integer"
                },
                "outgoingRouting": {
                    "type": "integer"
                }
            }
        },
        "LcrRuleTarget-Detailed": {
            "type": "object",
            "description": "LcrRuleTarget",
            "properties": {
                "lcrId": {
                    "description": "column: lcr_id",
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "rule": {
                    "$ref": "#\/definitions\/LcrRule"
                },
                "gw": {
                    "$ref": "#\/definitions\/LcrGateway"
                },
                "outgoingRouting": {
                    "$ref": "#\/definitions\/OutgoingRouting"
                }
            }
        },
        "LcrRuleTarget-Simple": {
            "type": "object",
            "description": "LcrRuleTarget",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Locution": {
            "type": "object",
            "description": "Locution",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:pending|encoding|ready|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "encodedFile": {
                    "type": "string"
                },
                "originalFile": {
                    "type": "string"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "Locution-Detailed": {
            "type": "object",
            "description": "Locution",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:pending|encoding|ready|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "encodedFile": {
                    "type": "string"
                },
                "originalFile": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "Locution-Simple": {
            "type": "object",
            "description": "Locution",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MatchList": {
            "type": "object",
            "description": "MatchList",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "MatchList-Detailed": {
            "type": "object",
            "description": "MatchList",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MatchListPattern"
                    }
                }
            }
        },
        "MatchList-Simple": {
            "type": "object",
            "description": "MatchList",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MatchListPattern": {
            "type": "object",
            "description": "MatchListPattern",
            "properties": {
                "description": {
                    "type": "string"
                },
                "type": {
                    "description": "comment: enum:number|regexp",
                    "type": "string"
                },
                "regexp": {
                    "type": "string"
                },
                "numbervalue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "matchList": {
                    "type": "integer"
                },
                "numberCountry": {
                    "type": "integer"
                }
            }
        },
        "MatchListPattern-Detailed": {
            "type": "object",
            "description": "MatchListPattern",
            "properties": {
                "description": {
                    "type": "string"
                },
                "type": {
                    "description": "comment: enum:number|regexp",
                    "type": "string"
                },
                "regexp": {
                    "type": "string"
                },
                "numbervalue": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "matchList": {
                    "$ref": "#\/definitions\/MatchList"
                },
                "numberCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "MatchListPattern-Simple": {
            "type": "object",
            "description": "MatchListPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MediaRelaySet": {
            "type": "object",
            "description": "MediaRelaySet",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MediaRelaySet-Detailed": {
            "type": "object",
            "description": "MediaRelaySet",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MediaRelaySet-Simple": {
            "type": "object",
            "description": "MediaRelaySet",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "MusicOnHold": {
            "type": "object",
            "description": "MusicOnHold",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:pending|encoding|ready|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "originalFile": {
                    "type": "string"
                },
                "encodedFile": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "MusicOnHold-Detailed": {
            "type": "object",
            "description": "MusicOnHold",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "comment: enum:pending|encoding|ready|error",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "originalFile": {
                    "type": "string"
                },
                "encodedFile": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "MusicOnHold-Simple": {
            "type": "object",
            "description": "MusicOnHold",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRule": {
            "type": "object",
            "description": "OutgoingDdiRule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "defaultAction": {
                    "description": "comment: enum:keep|force",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "forcedDdi": {
                    "type": "integer"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "OutgoingDdiRule-Detailed": {
            "type": "object",
            "description": "OutgoingDdiRule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "defaultAction": {
                    "description": "comment: enum:keep|force",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "forcedDdi": {
                    "$ref": "#\/definitions\/Ddi"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/OutgoingDdiRulesPattern"
                    }
                }
            }
        },
        "OutgoingDdiRule-Simple": {
            "type": "object",
            "description": "OutgoingDdiRule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRulesPattern": {
            "type": "object",
            "description": "OutgoingDdiRulesPattern",
            "properties": {
                "action": {
                    "description": "comment: enum:keep|force",
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "type": "integer"
                },
                "matchList": {
                    "type": "integer"
                },
                "forcedDdi": {
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRulesPattern-Detailed": {
            "type": "object",
            "description": "OutgoingDdiRulesPattern",
            "properties": {
                "action": {
                    "description": "comment: enum:keep|force",
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "$ref": "#\/definitions\/OutgoingDdiRule"
                },
                "matchList": {
                    "$ref": "#\/definitions\/MatchList"
                },
                "forcedDdi": {
                    "$ref": "#\/definitions\/Ddi"
                }
            }
        },
        "OutgoingDdiRulesPattern-Simple": {
            "type": "object",
            "description": "OutgoingDdiRulesPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "OutgoingRouting": {
            "type": "object",
            "description": "OutgoingRouting",
            "properties": {
                "type": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "peeringContract": {
                    "type": "integer"
                },
                "routingPattern": {
                    "type": "integer"
                },
                "routingPatternGroup": {
                    "type": "integer"
                },
                "lcrRules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "OutgoingRouting-Detailed": {
            "type": "object",
            "description": "OutgoingRouting",
            "properties": {
                "type": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "peeringContract": {
                    "$ref": "#\/definitions\/PeeringContract"
                },
                "routingPattern": {
                    "$ref": "#\/definitions\/RoutingPattern"
                },
                "routingPatternGroup": {
                    "$ref": "#\/definitions\/RoutingPatternGroup"
                },
                "lcrRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/LcrRule"
                    }
                }
            }
        },
        "OutgoingRouting-Simple": {
            "type": "object",
            "description": "OutgoingRouting",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ParsedCdr": {
            "type": "object",
            "description": "ParsedCdr",
            "properties": {
                "statId": {
                    "type": "integer"
                },
                "xstatId": {
                    "type": "integer"
                },
                "statType": {
                    "type": "string"
                },
                "initialLeg": {
                    "type": "string"
                },
                "initialLegHash": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "cidHash": {
                    "type": "string"
                },
                "xcid": {
                    "type": "string"
                },
                "xcidHash": {
                    "type": "string"
                },
                "proxies": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "type": "integer"
                },
                "aParty": {
                    "type": "string"
                },
                "bParty": {
                    "type": "string"
                },
                "caller": {
                    "type": "string"
                },
                "callee": {
                    "type": "string"
                },
                "xCaller": {
                    "type": "string"
                },
                "xCallee": {
                    "type": "string"
                },
                "initialReferrer": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "referee": {
                    "type": "string"
                },
                "lastForwarder": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "peeringContract": {
                    "type": "integer"
                }
            }
        },
        "ParsedCdr-Detailed": {
            "type": "object",
            "description": "ParsedCdr",
            "properties": {
                "statId": {
                    "type": "integer"
                },
                "xstatId": {
                    "type": "integer"
                },
                "statType": {
                    "type": "string"
                },
                "initialLeg": {
                    "type": "string"
                },
                "initialLegHash": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "cidHash": {
                    "type": "string"
                },
                "xcid": {
                    "type": "string"
                },
                "xcidHash": {
                    "type": "string"
                },
                "proxies": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "type": "integer"
                },
                "aParty": {
                    "type": "string"
                },
                "bParty": {
                    "type": "string"
                },
                "caller": {
                    "type": "string"
                },
                "callee": {
                    "type": "string"
                },
                "xCaller": {
                    "type": "string"
                },
                "xCallee": {
                    "type": "string"
                },
                "initialReferrer": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "referee": {
                    "type": "string"
                },
                "lastForwarder": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "peeringContract": {
                    "$ref": "#\/definitions\/PeeringContract"
                }
            }
        },
        "ParsedCdr-Simple": {
            "type": "object",
            "description": "ParsedCdr",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PeerServer": {
            "type": "object",
            "description": "PeerServer",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "uriScheme": {
                    "description": "column: uri_scheme",
                    "type": "boolean"
                },
                "transport": {
                    "type": "boolean"
                },
                "strip": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "sendPAI": {
                    "type": "boolean"
                },
                "sendRPID": {
                    "type": "boolean"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "authUser": {
                    "description": "column: auth_user",
                    "type": "string"
                },
                "authPassword": {
                    "description": "column: auth_password",
                    "type": "string"
                },
                "sipProxy": {
                    "description": "column: sip_proxy",
                    "type": "string"
                },
                "outboundProxy": {
                    "description": "column: outbound_proxy",
                    "type": "string"
                },
                "fromUser": {
                    "description": "column: from_user",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "lcrGateway": {
                    "type": "integer"
                },
                "peeringContract": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "PeerServer-Detailed": {
            "type": "object",
            "description": "PeerServer",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "uriScheme": {
                    "description": "column: uri_scheme",
                    "type": "boolean"
                },
                "transport": {
                    "type": "boolean"
                },
                "strip": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "sendPAI": {
                    "type": "boolean"
                },
                "sendRPID": {
                    "type": "boolean"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "authUser": {
                    "description": "column: auth_user",
                    "type": "string"
                },
                "authPassword": {
                    "description": "column: auth_password",
                    "type": "string"
                },
                "sipProxy": {
                    "description": "column: sip_proxy",
                    "type": "string"
                },
                "outboundProxy": {
                    "description": "column: outbound_proxy",
                    "type": "string"
                },
                "fromUser": {
                    "description": "column: from_user",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "lcrGateway": {
                    "$ref": "#\/definitions\/LcrGateway"
                },
                "peeringContract": {
                    "$ref": "#\/definitions\/PeeringContract"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "PeerServer-Simple": {
            "type": "object",
            "description": "PeerServer",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PeeringContract": {
            "type": "object",
            "description": "PeeringContract",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "externallyRated": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "peerServers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "PeeringContract-Detailed": {
            "type": "object",
            "description": "PeeringContract",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "externallyRated": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/OutgoingRouting"
                    }
                },
                "peerServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PeerServer"
                    }
                }
            }
        },
        "PeeringContract-Simple": {
            "type": "object",
            "description": "PeeringContract",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PickUpGroup": {
            "type": "object",
            "description": "PickUpGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "relUsers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "PickUpGroup-Detailed": {
            "type": "object",
            "description": "PickUpGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "relUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PickUpRelUser"
                    }
                }
            }
        },
        "PickUpGroup-Simple": {
            "type": "object",
            "description": "PickUpGroup",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PickUpRelUser": {
            "type": "object",
            "description": "PickUpRelUser",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pickUpGroup": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "PickUpRelUser-Detailed": {
            "type": "object",
            "description": "PickUpRelUser",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pickUpGroup": {
                    "$ref": "#\/definitions\/PickUpGroup"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "PickUpRelUser-Simple": {
            "type": "object",
            "description": "PickUpRelUser",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PikeTrusted": {
            "type": "object",
            "description": "PikeTrusted",
            "properties": {
                "srcIp": {
                    "description": "column: src_ip",
                    "type": "string"
                },
                "proto": {
                    "type": "string"
                },
                "fromPattern": {
                    "description": "column: from_pattern",
                    "type": "string"
                },
                "ruriPattern": {
                    "description": "column: ruri_pattern",
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PikeTrusted-Detailed": {
            "type": "object",
            "description": "PikeTrusted",
            "properties": {
                "srcIp": {
                    "description": "column: src_ip",
                    "type": "string"
                },
                "proto": {
                    "type": "string"
                },
                "fromPattern": {
                    "description": "column: from_pattern",
                    "type": "string"
                },
                "ruriPattern": {
                    "description": "column: ruri_pattern",
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PikeTrusted-Simple": {
            "type": "object",
            "description": "PikeTrusted",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PricingPlan": {
            "type": "object",
            "description": "PricingPlan",
            "properties": {
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "PricingPlan-Detailed": {
            "type": "object",
            "description": "PricingPlan",
            "properties": {
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "PricingPlan-Simple": {
            "type": "object",
            "description": "PricingPlan",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PricingPlansRelCompany": {
            "type": "object",
            "description": "PricingPlansRelCompany",
            "properties": {
                "validFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "metric": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pricingPlan": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "PricingPlansRelCompany-Detailed": {
            "type": "object",
            "description": "PricingPlansRelCompany",
            "properties": {
                "validFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "metric": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pricingPlan": {
                    "$ref": "#\/definitions\/PricingPlan"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "PricingPlansRelCompany-Simple": {
            "type": "object",
            "description": "PricingPlansRelCompany",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "PricingPlansRelTargetPattern": {
            "type": "object",
            "description": "PricingPlansRelTargetPattern",
            "properties": {
                "connectionCharge": {
                    "type": "string"
                },
                "periodTime": {
                    "type": "integer"
                },
                "perPeriodCharge": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pricingPlan": {
                    "type": "integer"
                },
                "targetPattern": {
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "PricingPlansRelTargetPattern-Detailed": {
            "type": "object",
            "description": "PricingPlansRelTargetPattern",
            "properties": {
                "connectionCharge": {
                    "type": "string"
                },
                "periodTime": {
                    "type": "integer"
                },
                "perPeriodCharge": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "pricingPlan": {
                    "$ref": "#\/definitions\/PricingPlan"
                },
                "targetPattern": {
                    "$ref": "#\/definitions\/TargetPattern"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "PricingPlansRelTargetPattern-Simple": {
            "type": "object",
            "description": "PricingPlansRelTargetPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyTrunk": {
            "type": "object",
            "description": "ProxyTrunk",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyTrunk-Detailed": {
            "type": "object",
            "description": "ProxyTrunk",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyTrunk-Simple": {
            "type": "object",
            "description": "ProxyTrunk",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyUser": {
            "type": "object",
            "description": "ProxyUser",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyUser-Detailed": {
            "type": "object",
            "description": "ProxyUser",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "ProxyUser-Simple": {
            "type": "object",
            "description": "ProxyUser",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Queue": {
            "type": "object",
            "description": "Queue",
            "properties": {
                "name": {
                    "type": "string"
                },
                "maxWaitTime": {
                    "type": "integer"
                },
                "timeoutTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "timeoutNumberValue": {
                    "type": "string"
                },
                "maxlen": {
                    "type": "integer"
                },
                "fullTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "fullNumberValue": {
                    "type": "string"
                },
                "periodicAnnounceFrequency": {
                    "type": "integer"
                },
                "memberCallRest": {
                    "type": "integer"
                },
                "memberCallTimeout": {
                    "type": "integer"
                },
                "strategy": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "periodicAnnounceLocution": {
                    "type": "integer"
                },
                "timeoutLocution": {
                    "type": "integer"
                },
                "timeoutExtension": {
                    "type": "integer"
                },
                "timeoutVoiceMailUser": {
                    "type": "integer"
                },
                "fullLocution": {
                    "type": "integer"
                },
                "fullExtension": {
                    "type": "integer"
                },
                "fullVoiceMailUser": {
                    "type": "integer"
                },
                "timeoutNumberCountry": {
                    "type": "integer"
                },
                "fullNumberCountry": {
                    "type": "integer"
                }
            }
        },
        "Queue-Detailed": {
            "type": "object",
            "description": "Queue",
            "properties": {
                "name": {
                    "type": "string"
                },
                "maxWaitTime": {
                    "type": "integer"
                },
                "timeoutTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "timeoutNumberValue": {
                    "type": "string"
                },
                "maxlen": {
                    "type": "integer"
                },
                "fullTargetType": {
                    "description": "comment: enum:number|extension|voicemail",
                    "type": "string"
                },
                "fullNumberValue": {
                    "type": "string"
                },
                "periodicAnnounceFrequency": {
                    "type": "integer"
                },
                "memberCallRest": {
                    "type": "integer"
                },
                "memberCallTimeout": {
                    "type": "integer"
                },
                "strategy": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "periodicAnnounceLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "timeoutLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "timeoutExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "timeoutVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "fullLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "fullExtension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "fullVoiceMailUser": {
                    "$ref": "#\/definitions\/User"
                },
                "timeoutNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                },
                "fullNumberCountry": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "Queue-Simple": {
            "type": "object",
            "description": "Queue",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "QueueMember": {
            "type": "object",
            "description": "QueueMember",
            "properties": {
                "penalty": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "queue": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "QueueMember-Detailed": {
            "type": "object",
            "description": "QueueMember",
            "properties": {
                "penalty": {
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "queue": {
                    "$ref": "#\/definitions\/Queue"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "QueueMember-Simple": {
            "type": "object",
            "description": "QueueMember",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Recording": {
            "type": "object",
            "description": "Recording",
            "properties": {
                "callid": {
                    "type": "string"
                },
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "comment: enum:ondemand|ddi",
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "caller": {
                    "type": "string"
                },
                "callee": {
                    "type": "string"
                },
                "recorder": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "recordedFile": {
                    "type": "string"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "Recording-Detailed": {
            "type": "object",
            "description": "Recording",
            "properties": {
                "callid": {
                    "type": "string"
                },
                "calldate": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "comment: enum:ondemand|ddi",
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "caller": {
                    "type": "string"
                },
                "callee": {
                    "type": "string"
                },
                "recorder": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "recordedFile": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "Recording-Simple": {
            "type": "object",
            "description": "Recording",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "RetailAccount": {
            "type": "object",
            "description": "RetailAccount",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transport": {
                    "description": "comment: enum:udp|tcp|tls",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "disallow": {
                    "type": "string"
                },
                "allow": {
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:invite|update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "description": "column: callerid_update_header\ncomment: enum:pai|rpid",
                    "type": "string"
                },
                "updateCallerid": {
                    "description": "column: update_callerid\ncomment: enum:yes|no",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "description": "comment: enum:yes|no",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                },
                "outgoingDdi": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "psEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ddis": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RetailAccount-Detailed": {
            "type": "object",
            "description": "RetailAccount",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transport": {
                    "description": "comment: enum:udp|tcp|tls",
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "authNeeded": {
                    "description": "column: auth_needed",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "disallow": {
                    "type": "string"
                },
                "allow": {
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:invite|update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "description": "column: callerid_update_header\ncomment: enum:pai|rpid",
                    "type": "string"
                },
                "updateCallerid": {
                    "description": "column: update_callerid\ncomment: enum:yes|no",
                    "type": "string"
                },
                "fromDomain": {
                    "description": "column: from_domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "description": "comment: enum:yes|no",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#\/definitions\/Ddi"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "psEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ddis": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Ddi"
                    }
                }
            }
        },
        "RetailAccount-Simple": {
            "type": "object",
            "description": "RetailAccount",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "RoutingPattern": {
            "type": "object",
            "description": "RoutingPattern",
            "properties": {
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "lcrRules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoutingPattern-Detailed": {
            "type": "object",
            "description": "RoutingPattern",
            "properties": {
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "lcrRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/LcrRule"
                    }
                }
            }
        },
        "RoutingPattern-Simple": {
            "type": "object",
            "description": "RoutingPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "RoutingPatternGroup": {
            "type": "object",
            "description": "RoutingPatternGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "type": "integer"
                },
                "relPatterns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoutingPatternGroup-Detailed": {
            "type": "object",
            "description": "RoutingPatternGroup",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "relPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/RoutingPatternGroupsRelPattern"
                    }
                },
                "outgoingRoutings": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/OutgoingRouting"
                    }
                }
            }
        },
        "RoutingPatternGroup-Simple": {
            "type": "object",
            "description": "RoutingPatternGroup",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "RoutingPatternGroupsRelPattern": {
            "type": "object",
            "description": "RoutingPatternGroupsRelPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "routingPattern": {
                    "type": "integer"
                },
                "routingPatternGroup": {
                    "type": "integer"
                }
            }
        },
        "RoutingPatternGroupsRelPattern-Detailed": {
            "type": "object",
            "description": "RoutingPatternGroupsRelPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "routingPattern": {
                    "$ref": "#\/definitions\/RoutingPattern"
                },
                "routingPatternGroup": {
                    "$ref": "#\/definitions\/RoutingPatternGroup"
                }
            }
        },
        "RoutingPatternGroupsRelPattern-Simple": {
            "type": "object",
            "description": "RoutingPatternGroupsRelPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Schedule": {
            "type": "object",
            "description": "Schedule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeIn": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeout": {
                    "type": "string",
                    "format": "date-time"
                },
                "monday": {
                    "type": "boolean"
                },
                "tuesday": {
                    "type": "boolean"
                },
                "wednesday": {
                    "type": "boolean"
                },
                "thursday": {
                    "type": "boolean"
                },
                "friday": {
                    "type": "boolean"
                },
                "saturday": {
                    "type": "boolean"
                },
                "sunday": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                }
            }
        },
        "Schedule-Detailed": {
            "type": "object",
            "description": "Schedule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeIn": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeout": {
                    "type": "string",
                    "format": "date-time"
                },
                "monday": {
                    "type": "boolean"
                },
                "tuesday": {
                    "type": "boolean"
                },
                "wednesday": {
                    "type": "boolean"
                },
                "thursday": {
                    "type": "boolean"
                },
                "friday": {
                    "type": "boolean"
                },
                "saturday": {
                    "type": "boolean"
                },
                "sunday": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                }
            }
        },
        "Schedule-Simple": {
            "type": "object",
            "description": "Schedule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Service": {
            "type": "object",
            "description": "Service",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "defaultCode": {
                    "type": "string"
                },
                "extraArgs": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Service-Detailed": {
            "type": "object",
            "description": "Service",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "defaultCode": {
                    "type": "string"
                },
                "extraArgs": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Service-Simple": {
            "type": "object",
            "description": "Service",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TargetPattern": {
            "type": "object",
            "description": "TargetPattern",
            "properties": {
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                }
            }
        },
        "TargetPattern-Detailed": {
            "type": "object",
            "description": "TargetPattern",
            "properties": {
                "regExp": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                }
            }
        },
        "TargetPattern-Simple": {
            "type": "object",
            "description": "TargetPattern",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Terminal": {
            "type": "object",
            "description": "Terminal",
            "properties": {
                "name": {
                    "type": "string"
                },
                "disallow": {
                    "type": "string"
                },
                "allowAudio": {
                    "description": "column: allow_audio",
                    "type": "string"
                },
                "allowVideo": {
                    "description": "column: allow_video",
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:update|invite|reinvite",
                    "type": "string"
                },
                "password": {
                    "description": "comment: password",
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "lastProvisionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "terminalModel": {
                    "type": "integer"
                },
                "astPsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Terminal-Detailed": {
            "type": "object",
            "description": "Terminal",
            "properties": {
                "name": {
                    "type": "string"
                },
                "disallow": {
                    "type": "string"
                },
                "allowAudio": {
                    "description": "column: allow_audio",
                    "type": "string"
                },
                "allowVideo": {
                    "description": "column: allow_video",
                    "type": "string"
                },
                "directMediaMethod": {
                    "description": "column: direct_media_method\ncomment: enum:update|invite|reinvite",
                    "type": "string"
                },
                "password": {
                    "description": "comment: password",
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "lastProvisionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "terminalModel": {
                    "$ref": "#\/definitions\/TerminalModel"
                },
                "astPsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                }
            }
        },
        "Terminal-Simple": {
            "type": "object",
            "description": "Terminal",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TerminalManufacturer": {
            "type": "object",
            "description": "TerminalManufacturer",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TerminalManufacturer-Detailed": {
            "type": "object",
            "description": "TerminalManufacturer",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TerminalManufacturer-Simple": {
            "type": "object",
            "description": "TerminalManufacturer",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TerminalModel": {
            "type": "object",
            "description": "TerminalModel",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genericTemplate": {
                    "type": "string"
                },
                "specificTemplate": {
                    "type": "string"
                },
                "genericUrlPattern": {
                    "type": "string"
                },
                "specificUrlPattern": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "terminalManufacturer": {
                    "type": "integer"
                }
            }
        },
        "TerminalModel-Detailed": {
            "type": "object",
            "description": "TerminalModel",
            "properties": {
                "iden": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genericTemplate": {
                    "type": "string"
                },
                "specificTemplate": {
                    "type": "string"
                },
                "genericUrlPattern": {
                    "type": "string"
                },
                "specificUrlPattern": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "terminalManufacturer": {
                    "$ref": "#\/definitions\/TerminalManufacturer"
                }
            }
        },
        "TerminalModel-Simple": {
            "type": "object",
            "description": "TerminalModel",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Timezone": {
            "type": "object",
            "description": "Timezone",
            "properties": {
                "tz": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "country": {
                    "type": "integer"
                }
            }
        },
        "Timezone-Detailed": {
            "type": "object",
            "description": "Timezone",
            "properties": {
                "tz": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#\/definitions\/Country"
                }
            }
        },
        "Timezone-Simple": {
            "type": "object",
            "description": "Timezone",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TransformationRule": {
            "type": "object",
            "description": "TransformationRule",
            "properties": {
                "type": {
                    "description": "comment: enum:callerin|calleein|callerout|calleeout",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "matchExpr": {
                    "type": "string"
                },
                "replaceExpr": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                }
            }
        },
        "TransformationRule-Detailed": {
            "type": "object",
            "description": "TransformationRule",
            "properties": {
                "type": {
                    "description": "comment: enum:callerin|calleein|callerout|calleeout",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "matchExpr": {
                    "type": "string"
                },
                "replaceExpr": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                }
            }
        },
        "TransformationRule-Simple": {
            "type": "object",
            "description": "TransformationRule",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "TransformationRuleSet": {
            "type": "object",
            "description": "TransformationRuleSet",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internationalCode": {
                    "type": "string"
                },
                "trunkPrefix": {
                    "type": "string"
                },
                "areaCode": {
                    "type": "string"
                },
                "nationalLen": {
                    "type": "integer"
                },
                "generateRules": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "country": {
                    "type": "integer"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "TransformationRuleSet-Detailed": {
            "type": "object",
            "description": "TransformationRuleSet",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internationalCode": {
                    "type": "string"
                },
                "trunkPrefix": {
                    "type": "string"
                },
                "areaCode": {
                    "type": "string"
                },
                "nationalLen": {
                    "type": "integer"
                },
                "generateRules": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "country": {
                    "$ref": "#\/definitions\/Country"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/TransformationRule"
                    }
                }
            }
        },
        "TransformationRuleSet-Simple": {
            "type": "object",
            "description": "TransformationRuleSet",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "User": {
            "type": "object",
            "description": "User",
            "properties": {
                "name": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "pass": {
                    "description": "comment: password",
                    "type": "string"
                },
                "doNotDisturb": {
                    "type": "boolean"
                },
                "isBoss": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "maxCalls": {
                    "type": "integer"
                },
                "externalIpCalls": {
                    "description": "comment: enum:0|1|2|3",
                    "type": "string"
                },
                "voicemailEnabled": {
                    "type": "boolean"
                },
                "voicemailSendMail": {
                    "type": "boolean"
                },
                "voicemailAttachSound": {
                    "type": "boolean"
                },
                "tokenKey": {
                    "type": "string"
                },
                "gsQRCode": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "type": "integer"
                },
                "callAcl": {
                    "type": "integer"
                },
                "bossAssistant": {
                    "type": "integer"
                },
                "bossAssistantWhiteList": {
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "terminal": {
                    "type": "integer"
                },
                "extension": {
                    "type": "integer"
                },
                "timezone": {
                    "type": "integer"
                },
                "outgoingDdi": {
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "type": "integer"
                },
                "voicemailLocution": {
                    "type": "integer"
                },
                "pickUpRelUsers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "queueMembers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "callForwardSettings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "User-Detailed": {
            "type": "object",
            "description": "User",
            "properties": {
                "name": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "pass": {
                    "description": "comment: password",
                    "type": "string"
                },
                "doNotDisturb": {
                    "type": "boolean"
                },
                "isBoss": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "maxCalls": {
                    "type": "integer"
                },
                "externalIpCalls": {
                    "description": "comment: enum:0|1|2|3",
                    "type": "string"
                },
                "voicemailEnabled": {
                    "type": "boolean"
                },
                "voicemailSendMail": {
                    "type": "boolean"
                },
                "voicemailAttachSound": {
                    "type": "boolean"
                },
                "tokenKey": {
                    "type": "string"
                },
                "gsQRCode": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "company": {
                    "$ref": "#\/definitions\/Company"
                },
                "callAcl": {
                    "$ref": "#\/definitions\/CallAcl"
                },
                "bossAssistant": {
                    "$ref": "#\/definitions\/User"
                },
                "bossAssistantWhiteList": {
                    "$ref": "#\/definitions\/MatchList"
                },
                "transformationRuleSet": {
                    "$ref": "#\/definitions\/TransformationRuleSet"
                },
                "language": {
                    "$ref": "#\/definitions\/Language"
                },
                "terminal": {
                    "$ref": "#\/definitions\/Terminal"
                },
                "extension": {
                    "$ref": "#\/definitions\/Extension"
                },
                "timezone": {
                    "$ref": "#\/definitions\/Timezone"
                },
                "outgoingDdi": {
                    "$ref": "#\/definitions\/Ddi"
                },
                "outgoingDdiRule": {
                    "$ref": "#\/definitions\/OutgoingDdiRule"
                },
                "voicemailLocution": {
                    "$ref": "#\/definitions\/Locution"
                },
                "pickUpRelUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PickUpRelUser"
                    }
                },
                "queueMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/QueueMember"
                    }
                },
                "callForwardSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/CallForwardSetting"
                    }
                }
            }
        },
        "User-Simple": {
            "type": "object",
            "description": "User",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        }
    }
}
