{
    "swagger": "2.0",
    "basePath": "\/",
    "info": {
        "title": "",
        "version": "0.1.0"
    },
    "paths": {
        "\/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Brand resources.",
                "responses": {
                    "200": {
                        "description": "Brand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Brand-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "recordingsLimitMB",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "recordingsLimitEmail",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "logo.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "operationId": "postBrandCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Brand resource.",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "The new Brand resource",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Brand resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/brands\/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Brand-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "operationId": "putBrandItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "The updated Brand resource",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Brand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "operationId": "deleteBrandItem",
                "summary": "Removes the Brand resource.",
                "responses": {
                    "204": {
                        "description": "Brand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "operationId": "getCompanyCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Company resources.",
                "responses": {
                    "200": {
                        "description": "Company collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Company-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "operationId": "postCompanyCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Company resource.",
                "parameters": [
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The new Company resource",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/companies\/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "operationId": "getCompanyItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Company-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "operationId": "putCompanyItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The updated Company resource",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "operationId": "deleteCompanyItem",
                "summary": "Removes the Company resource.",
                "responses": {
                    "204": {
                        "description": "Company resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/domains": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "operationId": "getDomainCollection",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves the collection of Domain resources.",
                "responses": {
                    "200": {
                        "description": "Domain collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#\/definitions\/Domain-Simple"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "The collection page number"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Domain"
                ],
                "operationId": "postDomainCollection",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Creates a Domain resource.",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "body",
                        "description": "The new Domain resource",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Domain resource created",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/domains\/{id}": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "operationId": "getDomainItem",
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Retrieves a Domain resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain resource response",
                        "schema": {
                            "$ref": "#\/definitions\/Domain-Detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Domain"
                ],
                "operationId": "putDomainItem",
                "consumes": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "produces": [
                    "application\/ld+json",
                    "application\/json",
                    "text\/html"
                ],
                "summary": "Replaces the Domain resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "domain",
                        "in": "body",
                        "description": "The updated Domain resource",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain resource updated",
                        "schema": {
                            "$ref": "#\/definitions\/Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Domain"
                ],
                "operationId": "deleteDomainItem",
                "summary": "Removes the Domain resource.",
                "responses": {
                    "204": {
                        "description": "Domain resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "\/login_check": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "postAuthenticate",
                "consumes": [
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "summary": "Retrieve JWT token",
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid credentials"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Bad credentials"
                    }
                }
            }
        }
    },
    "securityDefinitions": [
        {
            "type": "apiKey",
            "in": "header",
            "description": "Value for the Authorization header",
            "name": "Authorization"
        }
    ],
    "security": [
        [
            []
        ]
    ],
    "definitions": {
        "Brand": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "fromName": {
                    "type": "string"
                },
                "fromAddress": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#\/definitions\/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Brand_Invoice"
                },
                "domain": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "defaultTimezone": {
                    "type": "string"
                }
            }
        },
        "Brand-Detailed": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "fromName": {
                    "type": "string"
                },
                "fromAddress": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#\/definitions\/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Brand_Invoice"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "language": {
                    "type": "string"
                },
                "defaultTimezone": {
                    "type": "string"
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Company"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Domain"
                    }
                }
            }
        },
        "Brand-Simple": {
            "type": "object",
            "description": "Brand",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "logo": {
                    "$ref": "#\/definitions\/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#\/definitions\/Brand_Invoice"
                },
                "domain": {
                    "type": "integer"
                }
            }
        },
        "Brand_Invoice": {
            "type": "object",
            "description": "Invoice",
            "properties": {
                "nif": {
                    "type": "string"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "registryData": {
                    "type": "string"
                }
            }
        },
        "Brand_Logo": {
            "type": "object",
            "description": "Logo",
            "properties": {
                "fileSize": {
                    "description": "column: logoFileSize\ncomment: FSO",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "column: logoMimeType",
                    "type": "string"
                },
                "baseName": {
                    "description": "column: logoBaseName",
                    "type": "string"
                }
            }
        },
        "Company": {
            "type": "object",
            "description": "Company",
            "properties": {
                "type": {
                    "description": "comment: enum:vpbx|retail",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "nif": {
                    "type": "string"
                },
                "distributeMethod": {
                    "description": "comment: enum:static|rr|hash",
                    "type": "string"
                },
                "externalMaxCalls": {
                    "type": "integer"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "countryName": {
                    "description": "column: country",
                    "type": "string"
                },
                "ipfilter": {
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "type": "integer"
                },
                "onDemandRecordCode": {
                    "type": "string"
                },
                "externallyextraopts": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "mediaRelaySets": {
                    "type": "string"
                },
                "defaultTimezone": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "domain": {
                    "type": "integer"
                },
                "applicationServer": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "transformationRuleSet": {
                    "type": "string"
                },
                "outgoingDdi": {
                    "type": "string"
                },
                "outgoingDdiRule": {
                    "type": "string"
                }
            }
        },
        "Company-Detailed": {
            "type": "object",
            "description": "Company",
            "properties": {
                "type": {
                    "description": "comment: enum:vpbx|retail",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "domainUsers": {
                    "description": "column: domain_users",
                    "type": "string"
                },
                "nif": {
                    "type": "string"
                },
                "distributeMethod": {
                    "description": "comment: enum:static|rr|hash",
                    "type": "string"
                },
                "externalMaxCalls": {
                    "type": "integer"
                },
                "postalAddress": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "countryName": {
                    "description": "column: country",
                    "type": "string"
                },
                "ipfilter": {
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "type": "integer"
                },
                "onDemandRecordCode": {
                    "type": "string"
                },
                "externallyextraopts": {
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "mediaRelaySets": {
                    "type": "string"
                },
                "defaultTimezone": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#\/definitions\/Brand"
                },
                "domain": {
                    "$ref": "#\/definitions\/Domain"
                },
                "applicationServer": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "transformationRuleSet": {
                    "type": "string"
                },
                "outgoingDdi": {
                    "type": "string"
                },
                "outgoingDdiRule": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Domain"
                    }
                }
            }
        },
        "Company-Simple": {
            "type": "object",
            "description": "Company",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Domain": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "pointsTo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Domain-Detailed": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "pointsTo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        },
        "Domain-Simple": {
            "type": "object",
            "description": "Domain",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                }
            }
        }
    }
}
